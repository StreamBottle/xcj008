import { Injectable } from "@angular/core";
//  import { hideAHot } from '../main';
import { HandleErrorService } from "../../components/handle_error";
import { CommunicationService } from "../communication";
import { DashboardService } from "../dashboard/dashboard.service";
import { GearPanelService } from "../gear_panel/gear_panel.service";
import { OscilloscopeService } from "../oscilloscope/oscilloscope.service";

import { AppService } from "../../index/app.service";
import { SkillService } from "../../views/skill/skill.service";

declare let $: any;
@Injectable()
export class MultimeterService {
  // 万用表中自己的参数

  pedalA() {
    // 0.4~2.0的取值范围;

    return this.appService.VCUA;
  }
  pedalB() {
    // 0.8~4.1的取值范围;
    return this.appService.VCUB;
  }
  pedalC() {
    // 0.6~3.3的取值范围;
    return this.appService.VCUC;
  }
  pedalD() {
    // 0.2~1.5的取值范围;
    return this.appService.VCUD;
  }

  // tslint:disable-next-line:member-ordering
  Mdata = {
    appService: this.appService,
    skillService: this.skillService,
    handleErrorService: this.handleErrorService,
    oscilloscopeService: this.oscilloscopeService,
    Adata: {
      appService: this.appService,
      // 数据结构[0]项必须是空值，所有热点数据从[1]开始；热点ID和数据下标相对应；

      "0": {
        // 交流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接
          toall: [
            [0, 0],
            [12.5, 13.8],
            [12.5, 13.8],
            [0, 13.8],
            [0, 0],
            [0, 5.1],
            [0, this.pedalA],
            [0, 0],
            [0, 5.1],
            [0, this.pedalB],
            [0, 0],
            [0, 5.1],
            [0, this.pedalA],
            [0, 0],
            [0, 5.1],
            [0, this.pedalB],
            [0, 0],
            [12.5, 13.8],
            [0, 13.8]
          ],
          // 插头V全断开
          offV: [
            [0, 0],
            [12.5, 13.8],
            [12.5, 13.8],
            [0, 13.8],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [12.5, 13.8],
            [0, 13.8]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0],
            [12.5, 13.8],
            [12.5, 13.8],
            [0, 13.8],
            [0, 0],
            [0, 5.1],
            [0, 0],
            [0, 0],
            [0, 5.1],
            [0, 0],
            [0, 0],
            [0, 5.1],
            [0, 0],
            [0, 0],
            [0, 5.1],
            [0, 0],
            [0, 0],
            [12.5, 13.8],
            [0, 13.8]
          ],
          // 全断开
          allOut: [
            [0, 0],
            [12.5, 13.8],
            [12.5, 13.8],
            [0, 13.8],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [12.5, 13.8],
            [0, 13.8]
          ]
        },

        // 直流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ]
        },

        // 电阻数据
        resistance: {
          allOut: {
            V80_GND: ["0.01"],
            V1_T1: ["0.01"],
            V2_T2: ["0.01"],
            V3_T3: ["0.01"],
            V4_T4: ["0.01"],
            V5_T5: ["0.01"],
            V6_T6: ["0.01"],

            V1_GND: ["OL"],
            V2_GND: ["OL"],
            V3_GND: ["OL"],
            V4_GND: ["OL"],
            V5_GND: ["OL"],
            V6_GND: ["OL"],

            T1_GND: ["OL"],
            T2_GND: ["OL"],
            T3_GND: ["OL"],
            T4_GND: ["OL"],
            T5_GND: ["OL"],
            T6_GND: ["OL"]
          }
        }
      },
      "1": {
        // 直流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [12.5, 13.8, 12.5, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 4.82, 0, 4.82],
            [0, 0, 0, 0],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 0, 0, 0],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            {
              GND_A: [12.5, 13.8, 12.5, 13.8],
              N80_A: [12.5, 13.8, 12.5, 13.8],
              N90_N80: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              N95_A: [12.5, 0, 12.5, 0],
              N95_N90: [12.5, 0, 12.5, 0],
              A_GND: [12.5, 13.8, 12.5, 13.8],
              A_N80: [12.5, 13.8, 12.5, 13.8],
              N80_N90: [12.5, 13.8, 12.5, 13.8],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              A_N95: [12.5, 0, 12.5, 0],
              N90_N95: [12.5, 0, 12.5, 0],
              N95_N80: [0, 13.8, 0, 13.8],
              N80_N95: [0, 13.8, 0, 13.8],
              T5_T6: [0, 13.8, 0, 13.8],
              T6_T5: [0, 13.8, 0, 13.8],
              T5_N80: [0, 13.8, 0, 13.8],
              N80_T5: [0, 13.8, 0, 13.8],
              N95_GND: [0, 13.8, 0, 13.8],
              GND_N95: [0, 13.8, 0, 13.8],
              GND_T5: [0, 13.8, 0, 13.8],
              T5_GND: [0, 13.8, 0, 13.8],
              N90_T5: [12.5, 0, 12.5, 0],
              T5_N90: [12.5, 0, 12.5, 0],
              T6_N95: [0, 13.8, 0, 13.8],
              N95_T6: [0, 13.8, 0, 13.8],
              N90_T6: [12.5, 13.8, 12.5, 13.8],
              T6_N90: [12.5, 13.8, 12.5, 13.8],
              A_T6: [12.5, 13.8, 12.5, 13.8],
              T6_A: [12.5, 13.8, 12.5, 13.8],
              T5_A: [12.5, 0, 12.5, 0],
              A_T5: [12.5, 0, 12.5, 0]
            }
          ],
          // 插头T6全断开
          offT6: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [12.5, 13.8, 12.5, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 4.82, 0, 4.82],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            {
              GND_A: [12.5, 13.8, 12.5, 13.8],
              N80_A: [12.5, 13.8, 12.5, 13.8],
              N90_N80: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              N95_A: [12.5, 0, 12.5, 0],
              N95_N90: [12.5, 0, 12.5, 0],
              A_GND: [12.5, 13.8, 12.5, 13.8],
              A_N80: [12.5, 13.8, 12.5, 13.8],
              N80_N90: [12.5, 13.8, 12.5, 13.8],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              A_N95: [12.5, 0, 12.5, 0],
              N90_N95: [12.5, 0, 12.5, 0],
              N95_N80: [0, 13.8, 0, 13.8],
              N80_N95: [0, 13.8, 0, 13.8],
              T5_T6: [0, 13.8, 0, 13.8],
              T6_T5: [0, 13.8, 0, 13.8],
              T5_N80: [0, 13.8, 0, 13.8],
              N80_T5: [0, 13.8, 0, 13.8],
              N95_GND: [0, 13.8, 0, 13.8],
              GND_N95: [0, 13.8, 0, 13.8],
              GND_T5: [0, 13.8, 0, 13.8],
              T5_GND: [0, 13.8, 0, 13.8],
              N90_T5: [12.5, 0, 12.5, 0],
              T5_N90: [12.5, 0, 12.5, 0],
              T6_N95: [0, 13.8, 0, 13.8],
              N95_T6: [0, 13.8, 0, 13.8],
              N90_T6: [12.5, 13.8, 12.5, 13.8],
              T6_N90: [12.5, 13.8, 12.5, 13.8],
              A_T6: [12.5, 13.8, 12.5, 13.8],
              T6_A: [12.5, 13.8, 12.5, 13.8],
              T5_A: [12.5, 0, 12.5, 0],
              A_T5: [12.5, 0, 12.5, 0]
            }
          ]
        },
        // 交流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        resistance: {
          allOut: {
            GND_V80: ["OL"],
            V80_T1: ["0.01"],
            V1_T2: ["0.01"],
            V2_T3: ["0.01"],
            V3_T4: ["0.01"]
          }
        }
      },
      "2": {
        // 直流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接
          toall: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [0, 13.8, 0, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [0, 13.8, 0, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [0, 13.8, 0, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [0, 13.8, 0, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        // 交流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 3.5, 0, 3.5],
            [0, 3.5, 0, 3.5],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 3.5, 0, 3.5],
            [0, 3.5, 0, 3.5],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        resistance: {
          allOut: {
            GND_N95: ["0.01"],
            V80_T1: ["0.01"],
            V1_T2: ["0.01"],
            V2_T3: ["0.01"],
            V3_T4: ["0.01"],
            V4_T5: ["0.01"],
            V5_T6: ["0.01"],
            GND_V80: ["0.01"],
            GND_T1: ["0.01"],
          }
        }
      },
      "3": {
        // 直流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接
          toall: [
            [null, null],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [null, null],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [null, null],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [null, null],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        // 交流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        resistance: {
          toall: [
            [null, null],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 插头V全断开
          offV: [
            [null, null],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [null, null],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ],
          // 全断开
          allOut: [
            [null, null],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
          ]
        },
        // 绝缘电阻
        insulationRes: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接

          toall: {
            V80_GND: ["1.00"],
            V1_GND: ["1.00"],
            V2_GND: ["1.00"],
            V3_GND: ["1.00"],
            V4_GND: ["1.00"],
            V5_GND: ["1.00"],
            T1_GND: ["20"],
            T2_GND: ["20"],
            T3_GND: ["20"],
            T4_GND: ["20"],
            N95_GND: ["0"],
            V80_N95: ["0"],
            V1_N95: ["1.00"],
            V2_N95: ["1.00"],
            V3_N95: ["1.00"],
            V4_N95: ["1.00"],
            V5_N95: ["1.00"],
            T1_N95: ["20"],
            T2_N95: ["20"],
            T3_N95: ["20"],
            T4_N95: ["20"]
          },
          offV: {
            V80_GND: ["50"],
            V1_GND: ["55"],
            V2_GND: ["53"],
            V3_GND: ["1.00"],
            V4_GND: ["1.00"],
            V5_GND: ["1.00"],
            T1_GND: ["20"],
            T2_GND: ["20"],
            T3_GND: ["20"],
            T4_GND: ["20"],
            V80_N95: ["50"],
            V1_N95: ["55"],
            V2_N95: ["53"],
            V3_N95: ["1.00"],
            V4_N95: ["1.00"],
            V5_N95: ["1.00"],
            T1_N95: ["20"],
            T2_N95: ["20"],
            T3_N95: ["20"],
            T4_N95: ["20"],
            N95_GND: ["0"]
          },
          offT6: {
            V80_GND: ["1.00"],
            V1_GND: ["1.00"],
            V2_GND: ["1.00"],
            V3_GND: ["1.00"],
            V4_GND: ["1.00"],
            V5_GND: ["1.00"],
            T1_GND: ["41"],
            T2_GND: ["44"],
            T3_GND: ["120"],
            T4_GND: ["124"],
            V80_N95: ["1.00"],
            V1_N95: ["1.00"],
            V2_N95: ["1.00"],
            V3_N95: ["1.00"],
            V4_N95: ["1.00"],
            V5_N95: ["1.00"],
            T1_N95: ["41"],
            T2_N95: ["44"],
            T3_N95: ["120"],
            T4_N95: ["124"],
            N95_GND: ["0"]
          },
          allOut: {
            V80_GND: ["50"],
            V1_GND: ["55"],
            V2_GND: ["53"],
            V3_GND: ["1.00"],
            V4_GND: ["1.00"],
            V5_GND: ["1.00"],
            T1_GND: ["41"],
            T2_GND: ["44"],
            T3_GND: ["120"],
            T4_GND: ["124"],
            V80_N95: ["50"],
            V1_N95: ["55"],
            V2_N95: ["53"],
            V3_N95: ["1.00"],
            V4_N95: ["1.00"],
            V5_N95: ["1.00"],
            T1_N95: ["41"],
            T2_N95: ["44"],
            T3_N95: ["120"],
            T4_N95: ["124"],
            N95_GND: ["0"]
          }
        }
      },
      "4": {
        // 直流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接
          toall: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [12.5, 13.8, 12.5, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            {
              N90_T1: [12.5, 13.8, 12.5, 13.8],
              T1_N90: [12.5, 13.8, 12.5, 13.8],
              N90_T2: [12.5, 13.8, 12.5, 13.8],
              T2_N90: [12.5, 13.8, 12.5, 13.8],
              N90_V80: [12.5, 13.8, 12.5, 13.8],
              V80_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V2: [12.5, 13.8, 12.5, 13.8],
              // V2_N90: [12.5, 13.8, 12.5, 13.8],
              N90_V1: [12.5, 13.8, 12.5, 13.8],
              V1_N90: [12.5, 13.8, 12.5, 13.8],
              // V3_N90: [0, 0, 12.5, 13.8],
              // N90_V3: [0, 0, 12.5, 13.8],
              N95_T1: [12.5, 13.8, 12.5, 13.8],
              T1_N95: [12.5, 13.8, 12.5, 13.8],
              N95_T2: [12.5, 13.8, 12.5, 13.8],
              T2_N95: [12.5, 13.8, 12.5, 13.8],
              N95_V80: [12.5, 13.8, 12.5, 13.8],
              V80_N95: [12.5, 13.8, 12.5, 13.8],
              // N95_V2: [12.5, 13.8, 12.5, 13.8],
              // V2_N95: [12.5, 13.8, 12.5, 13.8],
              N95_V1: [12.5, 13.8, 12.5, 13.8],
              V1_N95: [12.5, 13.8, 12.5, 13.8],
              // V3_N95: [0, 0, 12.5, 13.8],
              // N95_V3: [0, 0, 12.5, 13.8],
              V1_V3: [12.5, 13.8, 0, 0],
              V3_V1: [12.5, 13.8, 0, 0],
              V3_V2: [12.5, 13.8, 0, 0],
              V2_V3: [12.5, 13.8, 0, 0],
              V80_V3: [12.5, 13.8, 0, 0],
              V3_V80: [12.5, 13.8, 0, 0],
              V3_T2: [12.5, 13.8, 0, 0],
              T2_V3: [12.5, 13.8, 0, 0],
              T1_V3: [12.5, 13.8, 0, 0],
              V3_T1: [12.5, 13.8, 0, 0],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              GND_N95: [12.5, 13.8, 12.5, 13.8],
              N95_GND: [12.5, 13.8, 12.5, 13.8],
              GND_V3: [12.5, 13.8, 0, 0],
              V3_GND: [12.5, 13.8, 0, 0]
            }
          ],
          // 插头T6全断开
          offT6: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [12.5, 13.8, 12.5, 13.8],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            {
              // N90_T1: [12.5, 13.8, 12.5, 13.8],
              // T1_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T2: [12.5, 13.8, 12.5, 13.8],
              // T2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V2: [12.5, 13.8, 12.5, 13.8],
              // N90_V1: [0, 0, 12.5, 13.8],
              // V1_N90: [0, 0, 12.5, 13.8],
              // V2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V3: [12.5, 13.8, 12.5, 13.8],
              // V3_N90: [12.5, 13.8, 12.5, 13.8],
              // N95_T1: [12.5, 13.8, 12.5, 13.8],
              // T1_N95: [12.5, 13.8, 12.5, 13.8],
              // N95_T2: [12.5, 13.8, 12.5, 13.8],
              // T2_N95: [12.5, 13.8, 12.5, 13.8],
              // N95_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_N95: [12.5, 13.8, 12.5, 13.8],
              // V1_N95: [0, 0, 12.5, 13.8],
              // N95_V1: [0, 0, 12.5, 13.8],
              // N95_V2: [12.5, 13.8, 12.5, 13.8],
              // V2_N95: [12.5, 13.8, 12.5, 13.8],
              // N95_V3: [12.5, 13.8, 12.5, 13.8],
              // V3_N95: [12.5, 13.8, 12.5, 13.8],
              // V3_V1: [12.5, 13.8, 0, 0],
              // V1_V3: [12.5, 13.8, 0, 0],
              // V1_V80: [12.5, 13.8, 0, 0],
              // V80_V1: [12.5, 13.8, 0, 0],
              // V2_V1: [12.5, 13.8, 0, 0],
              // V1_V2: [12.5, 13.8, 0, 0],
              // V1_T1: [12.5, 13.8, 0, 0],
              // T1_V1: [12.5, 13.8, 0, 0],
              // V1_T2: [12.5, 13.8, 0, 0],
              // T2_V1: [12.5, 13.8, 0, 0],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              GND_N95: [12.5, 13.8, 12.5, 13.8],
              N95_GND: [12.5, 13.8, 12.5, 13.8],
              V3_GND: [12.5, 13.8, 0, 0],
              GND_V3: [12.5, 13.8, 0, 0],
              // GND_V1: [12.5, 13.8, 0, 0],
              // V1_GND: [12.5, 13.8, 0, 0]
            }
          ]
        },
        // 交流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        resistance: {
          allOut: {
            T1_V80: ["0.01"],
            V80_T1: ["0.01"],
            T2_V1: ["0.01"],
            V1_T2: ["0.01"]
          }
        }
      },
      "5": {
        // 直流电压
        dvNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;
          // 端口插头全连接
          toall: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [12.5, 13.8, 12.5, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            // 变值
            [0, this.pedalB, 0, this.pedalB],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            // 变值
            [0, this.pedalB, 0, this.pedalB],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            {
              N90_N95: [12.5, 0, 12.5, 0],
              N95_N90: [12.5, 0, 12.5, 0],
              N80_N90: [12.5, 13.8, 12.5, 13.8],
              N90_N80: [12.5, 13.8, 12.5, 13.8],
              N95_N80: [0, 13.8, 0, 13.8],
              N80_N95: [0, 13.8, 0, 13.8],
              A_N95: [12.5, 0, 12.5, 0],
              N95_A: [12.5, 0, 12.5, 0],
              N80_A: [12.5, 13.8, 12.5, 13.8],
              A_N80: [12.5, 13.8, 12.5, 13.8],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              N95_GND: [0, 13.8, 0, 13.8],
              GND_N95: [0, 13.8, 0, 13.8],
              GND_A: [12.5, 13.8, 12.5, 13.8],
              A_GND: [12.5, 13.8, 12.5, 13.8],
              N95_V80: [0, 13.8, 0, 13.8],
              V80_N95: [0, 13.8, 0, 13.8],
              V1_N95: [0, 13.8, 0, 13.8],
              N95_V1: [0, 13.8, 0, 13.8],
              V2_N95: [0, 13.8, 0, 13.8],
              N95_V2: [0, 13.8, 0, 13.8],
              V3_N95: [0, 13.8, 0, 13.8],
              N95_V3: [0, 13.8, 0, 13.8],
              V4_N95: [0, 13.8, 0, 13.8],
              N95_V4: [0, 13.8, 0, 13.8],
              V5_N95: [0, 13.8, 0, 13.8],
              N95_V5: [0, 13.8, 0, 13.8],
              T1_N95: [0, 13.8, 0, 13.8],
              N95_T1: [0, 13.8, 0, 13.8],
              T2_N95: [0, 13.8, 0, 13.8],
              N95_T2: [0, 13.8, 0, 13.8],
              T3_N95: [0, 13.8, 0, 13.8],
              N95_T3: [0, 13.8, 0, 13.8],
              T4_N95: [0, 13.8, 0, 13.8],
              N95_T4: [0, 13.8, 0, 13.8],
              T5_N95: [0, 13.8, 0, 13.8],
              N95_T5: [0, 13.8, 0, 13.8],
              T6_N95: [0, 13.8, 0, 13.8],
              N95_T6: [0, 13.8, 0, 13.8],
              // N90_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_N90: [12.5, 13.8, 12.5, 13.8],
              // V1_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V1: [12.5, 13.8, 12.5, 13.8],
              // V2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V2: [12.5, 13.8, 12.5, 13.8],
              // V3_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V3: [12.5, 13.8, 12.5, 13.8],
              // V4_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V4: [12.5, 13.8, 12.5, 13.8],
              // V5_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V5: [12.5, 13.8, 12.5, 13.8],
              // T1_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T1: [12.5, 13.8, 12.5, 13.8],
              // T2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T2: [12.5, 13.8, 12.5, 13.8],
              // T3_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T3: [12.5, 13.8, 12.5, 13.8],
              // T4_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T4: [12.5, 13.8, 12.5, 13.8],
              // T5_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T5: [12.5, 13.8, 12.5, 13.8],
              // T6_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T6: [12.5, 13.8, 12.5, 13.8],
              // A_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_A: [12.5, 13.8, 12.5, 13.8],
              // A_V1: [12.5, 13.8, 12.5, 13.8],
              // V1_A: [12.5, 13.8, 12.5, 13.8],
              // A_V2: [12.5, 13.8, 12.5, 13.8],
              // V2_A: [12.5, 13.8, 12.5, 13.8],
              // A_V3: [12.5, 13.8, 12.5, 13.8],
              // V3_A: [12.5, 13.8, 12.5, 13.8],
              // A_V4: [12.5, 13.8, 12.5, 13.8],
              // V4_A: [12.5, 13.8, 12.5, 13.8],
              // A_V5: [12.5, 13.8, 12.5, 13.8],
              // V5_A: [12.5, 13.8, 12.5, 13.8],
              // A_T1: [12.5, 13.8, 12.5, 13.8],
              // T1_A: [12.5, 13.8, 12.5, 13.8],
              // A_T2: [12.5, 13.8, 12.5, 13.8],
              // T2_A: [12.5, 13.8, 12.5, 13.8],
              // A_T3: [12.5, 13.8, 12.5, 13.8],
              // T3_A: [12.5, 13.8, 12.5, 13.8],
              // A_T4: [12.5, 13.8, 12.5, 13.8],
              // T4_A: [12.5, 13.8, 12.5, 13.8],
              // A_T5: [12.5, 13.8, 12.5, 13.8],
              // T5_A: [12.5, 13.8, 12.5, 13.8],
              // A_T6: [12.5, 13.8, 12.5, 13.8],
              // T6_A: [12.5, 13.8, 12.5, 13.8]
            }
          ],
          // 插头T6全断开
          offT6: [
            [null, null, null, null],
            [0, 0, 0, 0],
            [12.5, 13.8, 0, 0],
            [12.5, 13.8, 12.5, 13.8],
            [0, 13.8, 0, 13.8],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 5.1, 0, 5.1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            {
              N90_N95: [12.5, 0, 12.5, 0],
              N95_N90: [12.5, 0, 12.5, 0],
              N80_N90: [12.5, 13.8, 12.5, 13.8],
              N90_N80: [12.5, 13.8, 12.5, 13.8],
              N95_N80: [0, 13.8, 0, 13.8],
              N80_N95: [0, 13.8, 0, 13.8],
              A_N95: [12.5, 0, 12.5, 0],
              N95_A: [12.5, 0, 12.5, 0],
              N80_A: [12.5, 13.8, 12.5, 13.8],
              A_N80: [12.5, 13.8, 12.5, 13.8],
              GND_N90: [12.5, 13.8, 12.5, 13.8],
              N90_GND: [12.5, 13.8, 12.5, 13.8],
              N95_GND: [0, 13.8, 0, 13.8],
              GND_N95: [0, 13.8, 0, 13.8],
              GND_A: [12.5, 13.8, 12.5, 13.8],
              A_GND: [12.5, 13.8, 12.5, 13.8],
              N95_V80: [0, 13.8, 0, 13.8],
              V80_N95: [0, 13.8, 0, 13.8],
              V1_N95: [0, 13.8, 0, 13.8],
              N95_V1: [0, 13.8, 0, 13.8],
              V2_N95: [0, 13.8, 0, 13.8],
              N95_V2: [0, 13.8, 0, 13.8],
              V3_N95: [0, 13.8, 0, 13.8],
              N95_V3: [0, 13.8, 0, 13.8],
              V4_N95: [0, 13.8, 0, 13.8],
              N95_V4: [0, 13.8, 0, 13.8],
              V5_N95: [0, 13.8, 0, 13.8],
              N95_V5: [0, 13.8, 0, 13.8],
              T1_N95: [0, 13.8, 0, 13.8],
              N95_T1: [0, 13.8, 0, 13.8],
              T2_N95: [0, 13.8, 0, 13.8],
              N95_T2: [0, 13.8, 0, 13.8],
              T3_N95: [0, 13.8, 0, 13.8],
              N95_T3: [0, 13.8, 0, 13.8],
              T4_N95: [0, 13.8, 0, 13.8],
              N95_T4: [0, 13.8, 0, 13.8],
              T5_N95: [0, 13.8, 0, 13.8],
              N95_T5: [0, 13.8, 0, 13.8],
              T6_N95: [0, 13.8, 0, 13.8],
              N95_T6: [0, 13.8, 0, 13.8],
              // N90_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_N90: [12.5, 13.8, 12.5, 13.8],
              // V1_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V1: [12.5, 13.8, 12.5, 13.8],
              // V2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V2: [12.5, 13.8, 12.5, 13.8],
              // V3_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V3: [12.5, 13.8, 12.5, 13.8],
              // V4_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V4: [12.5, 13.8, 12.5, 13.8],
              // V5_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_V5: [12.5, 13.8, 12.5, 13.8],
              // T1_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T1: [12.5, 13.8, 12.5, 13.8],
              // T2_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T2: [12.5, 13.8, 12.5, 13.8],
              // T3_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T3: [12.5, 13.8, 12.5, 13.8],
              // T4_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T4: [12.5, 13.8, 12.5, 13.8],
              // T5_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T5: [12.5, 13.8, 12.5, 13.8],
              // T6_N90: [12.5, 13.8, 12.5, 13.8],
              // N90_T6: [12.5, 13.8, 12.5, 13.8],
              // A_V80: [12.5, 13.8, 12.5, 13.8],
              // V80_A: [12.5, 13.8, 12.5, 13.8],
              // A_V1: [12.5, 13.8, 12.5, 13.8],
              // V1_A: [12.5, 13.8, 12.5, 13.8],
              // A_V2: [12.5, 13.8, 12.5, 13.8],
              // V2_A: [12.5, 13.8, 12.5, 13.8],
              // A_V3: [12.5, 13.8, 12.5, 13.8],
              // V3_A: [12.5, 13.8, 12.5, 13.8],
              // A_V4: [12.5, 13.8, 12.5, 13.8],
              // V4_A: [12.5, 13.8, 12.5, 13.8],
              // A_V5: [12.5, 13.8, 12.5, 13.8],
              // V5_A: [12.5, 13.8, 12.5, 13.8],
              // A_T1: [12.5, 13.8, 12.5, 13.8],
              // T1_A: [12.5, 13.8, 12.5, 13.8],
              // A_T2: [12.5, 13.8, 12.5, 13.8],
              // T2_A: [12.5, 13.8, 12.5, 13.8],
              // A_T3: [12.5, 13.8, 12.5, 13.8],
              // T3_A: [12.5, 13.8, 12.5, 13.8],
              // A_T4: [12.5, 13.8, 12.5, 13.8],
              // T4_A: [12.5, 13.8, 12.5, 13.8],
              // A_T5: [12.5, 13.8, 12.5, 13.8],
              // T5_A: [12.5, 13.8, 12.5, 13.8],
              // A_T6: [12.5, 13.8, 12.5, 13.8],
              // T6_A: [12.5, 13.8, 12.5, 13.8]
            }
          ]
        },
        // 交流电压
        dcNum: {
          // 所有端口状态排列顺序依照测量热区的ID顺序排列
          // [0] 点火开关off档数值,[1]点火开关on/start档数值;

          // 端口插头全连接
          toall: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头V全断开
          offV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 插头T6全断开
          offT6: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ],
          // 全断开
          allOut: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
          ]
        },
        resistance: {
          allOut: {
            V80_T1: ["0.01"],
            V1_T2: ["0.01"],
            V2_T3: ["0.01"],
            V3_T4: ["0.01"],
            V4_T5: ["0.01"],
            V5_T6: ["0.01"],
            V1_GND: ["0.01"],
            T2_GND: ["0.01"],
            N80_V1: ["0.01"],
            N80_T2: ["0.01"]
          }
        }
      }
    },
    DCElectric: null,
    resistance: null,
    insulationRes: null,
    halo: "",
    isInsulationRes: false,
    taskText: "",
    dashboardService: this.dashboardService,
    gearPanelService: this.gearPanelService,
    falseconnectStatus: false,
    dropsuccessNum: "", //  表笔放在热区位置代表的数值 1正常测试，2短路
    redposition: "", //  红表笔在热区的位置
    blackposition: "", // 黑表笔在热区的位置
    multimeterStatus: false, // 万用表的表身显示和隐藏
    multimeterScreenStatus: false, // 万用表的显示屏显示和隐藏
    multimeterScreenNum: "", // 万用表的显示屏数值
    multimeterScreenUnit: "", // 万用表的显示屏中的单位是什么
    multimeterScreenUnitSelf: "", // 万用表的显示屏中的单位是什么
    multimeterScreenrightUnit: "", // 左边单位
    multimeterresdw: "", // 绝缘电阻单位
    resShow: "", // 绝缘电阻显示的数值
    multimetershowDateUnit: "", //  字体为LED，而欧姆单位显示不见，增加一个单位
    SvgStatus: false, // 万用表红表线和红表笔显示和隐藏
    SvgRedStatus: true, // 万用表红表线和红表笔显示和隐藏
    SvgBlackStatus: true, // 万用表黑表线和黑表笔显示和隐藏
    multimeter_drag: "0", // 万用表是否拖动了
    multimeterinsulated: false, // 万用表是否在绝缘电阻档位
    wanyongbiao: "",
    multimeter_body: "1", // 万用表表身是否能拖动，1代表能，0代表不能
    multimeter_red: "1", // 万用表红表笔是否能拖动，1代表能，0代表不能
    multimeter_black: "1", // 万用表黑表笔是否能拖动，1代表能，0代表不能
    svgRecoverStatus: "1", // 万用表的表针时候需要恢复回原处，1代表用，0为不用
    multimeterblackPosition: null, // 存储万用表黑色表笔放在那个控件上
    multimeterredPosition: null, // 存储万用表红色表笔放在那个控件上
    Radrepetition: "0", // 存储万用表红色表笔放在那个热区上
    Blackrepetition: "0", // 存储万用表黑色表笔放在那个热区上
    w_multimeter_redHtml: null, // 万用表红表笔的那个页面
    w_multimeter_blackHtml: null, // 万用表红表笔的那个页面
    Param_redx: "440", // 红色表线起始x坐标\红色表线曲线起始x坐标
    Param_redy: "100", // 红色表线起始y坐标\红色表线曲线起始y坐标
    Param_redcx: "420", // 红色表线曲线拐x坐标
    Param_redcy: "37", // 红色表线曲线拐y坐标
    Param_redpx: "403", // 红色表线曲线结束x坐标
    Param_redpy: "375", // 红色表线曲线结束x坐标
    Param_blackx: "282", // 黑色表线起始x坐标\黑色表线曲线起始x坐标
    Param_blacky: "100", // 黑色表线起始y坐标\黑色表线曲线起始y坐标
    Param_blackcx: "302", // 黑色表线曲线拐x坐标
    Param_blackcy: "37", // 黑色表线曲线拐y坐标
    Param_blackpx: "376", // 黑色表线曲线结束x坐标
    Param_blackpy: "375", // 黑色表线曲线结束x坐标
    multimeterredstartx: "440", // 红色表线起始x坐标\红色表线曲线起始x坐标的恢复值
    multimeterredstarty: "100", // 红色表线起始y坐标\红色表线曲线起始y坐标的恢复值
    multimeterredradianx: "420", // 红色表线曲线拐x坐标的恢复值
    multimeterredradiany: "37", // 红色表线曲线拐y坐标的恢复值
    multimeterredstopx: "403", // 红色表线曲线结束x坐标的恢复值
    multimeterredstopy: "375", // 红色表线曲线结束x坐标的恢复值
    multimeterblackstartx: "282", // 黑色表线起始x坐标\黑色表线曲线起始x坐标的恢复值
    multimeterblackstarty: "100", // 黑色表线起始y坐标\黑色表线曲线起始y坐标的恢复值
    multimeterblackradianx: "302", // 黑色表线曲线拐x坐标的恢复值
    multimeterblackradiany: "37", // 黑色表线曲线拐y坐标的恢复值
    multimeterblackstopx: "376", // 黑色表线曲线结束x坐标的恢复值
    multimeterblackstopy: "375", // 黑色表线曲线结束x坐标的恢复值
    communicationService: this.communicationService,
    currentPinOut: "toall", // 记录拔插的是那个插头;

    redPinOut: undefined,
    blackPinOut: undefined,

    modelOrself: "self",

    multimeter() {
      let _this: any = this;
      // 被使用的状态码
      // **multimeterStay = 1;
      // 加上触发样式
      $(".right-multimeter")
        .parent()
        .addClass("active");
      $(".test1").css("opacity", 0.5);
      $(".test1").css("z-index", 1);
      $(".test2").css("z-index", 6666);
      $("#mask-svg").removeClass("hide-important");
      $(".multimeter-bottom").css("transform", "rotate(0deg)");
      $(".multimeter-contain").removeClass("hide-important");
      $(".clickcircle").css("opacity", 1);
      // continuevoltageflash(voltageflash);
      $(".buttonflash").addClass("hide-important");
      // 显示热区
      $(".circuit-multimeter-hot").removeClass("hide-important");
      // showAHot();
      // 记录进度
      //         recordHistory('A008');
      if ($(".test2").css("opacity") == 0.5) {
        $(".temperature-contain").addClass("hide-important");
        $(".test2").css("opacity", 0);
        $(".temperaturehotwrap").addClass("hide-important");
        $(".multimeter-contain").removeClass("hide-important");
      }
      $(".hotareatest").css("zIndex", 5);
      this.SvgStatus = true;
      this.multimeterScreenNum = "";
      this.multimeterScreenUnit = "";
      this.multimeterScreenUnitSelf = "";
      this.multimeterStatus = true; // 万用表身显示
      this.SvgRedStatus = true; // 万用表红表笔和红表线显示
      this.SvgBlackStatus = true; // 万用表黑表笔和黑表线显示
      setTimeout(() => {
        _this.multimeterredRecover();
        _this.multimeterblackRecover();

        _this.freshHontspot(); // 刷新页面的热区，为表笔接触做准备

        _this.dragStart();

        if ($(".alert-part").css("display") == "block") {
          _this.arrowAnimate(true);
        } else if ($(".alert-part1").css("display") == "block") {
          _this.arrowAnimate1(true);
        }
      }, 500);
    },

    redHotspotDrag(top?: string, left?: string, uiDraggableID?) {
      if (this.multimeterScreenUnit === "Ω") {
        this.wybShow = 'OL';
      } else if (this.multimeterScreenUnit === "V") {
        this.wybShow = '0';
      }
      this.resShow = "----";
      this.dropRedID = null;
      this.isDrop(null, uiDraggableID, true);
      if (top && left) {
        $("#hhjmultimeterRed-hotspot").css({ top: top, left: left });
      }

      $("#hhjmultimeterRed").css(
        "top",
        "" +
        (parseInt(
          $("#hhjmultimeterRed-hotspot")
            .css("top")
            .replace("px", "")
        ) -
          310) +
        "px"
      );
      $("#hhjmultimeterRed").css(
        "left",
        "" +
        parseInt(
          $("#hhjmultimeterRed-hotspot")
            .css("left")
            .replace("px", "")
        ) +
        "px"
      );

      var redLeftInt =
        parseInt(
          $("#hhjmultimeterRed")
            .css("left")
            .replace("px", "")
        ) + 15,
        redTopInt =
          parseInt(
            $("#hhjmultimeterRed")
              .css("top")
              .replace("px", "")
          ) + 5,
        topInt =
          parseInt(
            $("#mask-multimeter")
              .css("top")
              .replace("px", "")
          ) + 230,
        leftInt =
          parseInt(
            $("#mask-multimeter")
              .css("left")
              .replace("px", "")
          ) + 110,
        cl = redLeftInt - 40,
        ct = redTopInt - 80;

      this.multimeterredstartx = leftInt;
      this.multimeterredstarty = topInt;
      this.multimeterredradianx = cl;
      this.multimeterredradiany = ct;
      this.multimeterredstopx = redLeftInt;
      this.multimeterredstopy = redTopInt;

      var redLeftIntt = redLeftInt - 15,
        redTopIntt = redTopInt + 230;
      // $('.clickcircle').css('opacity',1);
      redTopInt = redTopInt - 65;
      redLeftInt = redLeftInt - 65;
      leftInt = leftInt - 50;
      topInt = topInt - 220;
      $("#path_Red").attr(
        "d",
        "M" +
        redLeftInt +
        " " +
        redTopInt +
        // ' C' +
        // redLeftInt +
        // ' ' +
        // redTopInt +
        // ' ' +
        // cl +
        // ' ' +
        // ct +
        " " +
        leftInt +
        " " +
        topInt
      );

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        this.Mout.Out1NER_Multi_ToScreen_x_x = "OL";
      } else if (this.Mint.In1NER_Multi_Insulate_Ohm_x == "1") {
        this.Mout.Out1NER_Multi_ToScreen_x_x = "----";
        this.multimeterScreenUnit = "----";
        this.multimeterScreenUnitSelf = "----";
      }
    },
    redHotspotStop(top: string, left: string) {
      if (this.svgRecoverStatus == 1) {
        this.multimeterredRecover();
      } else {
        this.svgRecoverStatus = 1;
      }
      if (top && left) {
        this.multimeterredRecover(top, left);
      }

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        if (this.multimeter_black == 0 && this.multimeter_red == 0) {
          $(".buttonflash").css("z-index", 3);
          $(".clickcircle ").css("z-index", 1);
          this.Mout.Out1NER_Multi_ToScreen_x_x = "OL";
          //  this.multimeterScreenUnit = '';
        } else {
          //  this.Mout.Out1NER_Multi_ToScreen_x_x = '1.';
          //  this.multimeterScreenUnit = '';
        }
      }
      //  multimeterServiceMout.Out1NER_Multi_ToScreen_x_x
      // 判断是否测量了电阻(两个表针是否都测量了，并且是否打到欧姆档)
      if (
        this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1" &&
        this.Radrepetition != "0" &&
        this.Blackrepetition != "0"
      ) {
        // 创建警告框
        if (parseInt(this.Radrepetition) <= 1000) {
          // $rootScope.createResistanceWarn('此功能不能用');
        }
      }
      // 进度点记录
      this.communicationService.setAction({
        id: "v02",
        flag: "",
        sub: "",
        value: "redUsed"
      });
    },
    blackHotspotDrag(top?: string, left?: string, uiDraggableID?) {
      if (this.multimeterScreenUnit === "Ω") {
        this.wybShow = 'OL';
      } else if (this.multimeterScreenUnit === "V") {
        this.wybShow = '0';
      }
      this.resShow = "----";
      this.dropBlackID = null;
      this.isDrop(null, uiDraggableID, true);
      if (top && left) {
        $("#hhjmultimeterBlack-hotspot").css({ top: top, left: left });
      }
      $("#hhjmultimeterBlack").css(
        "top",
        "" +
        (parseInt($("#hhjmultimeterBlack-hotspot").css("top")) - 310) +
        "px"
      );
      $("#hhjmultimeterBlack").css(
        "left",
        "" + parseInt($("#hhjmultimeterBlack-hotspot").css("left")) + "px"
      );
      var redLeftInt = parseInt($("#hhjmultimeterBlack").css("left")) + 10,
        redTopInt = parseInt($("#hhjmultimeterBlack").css("top")) + 10,
        topInt = parseInt($("#mask-multimeter").css("top")) + 295,
        leftInt = parseInt($("#mask-multimeter").css("left")) + 85,
        cl = redLeftInt - 40,
        ct = redTopInt - 80;
      //                   $('.clickcircle').css('opacity',1);

      redTopInt = redTopInt - 75;
      redLeftInt = redLeftInt - 60;
      leftInt = leftInt - 70;
      topInt = topInt - 290;
      $("#path_black").attr(
        "d",
        "M" +
        redLeftInt +
        " " +
        redTopInt +
        // ' C' +
        // redLeftInt +
        // ' ' +
        // redTopInt +
        // ' ' +
        // cl +
        // ' ' +
        // ct +
        " " +
        leftInt +
        " " +
        topInt
      );

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        this.Mout.Out1NER_Multi_ToScreen_x_x = "OL";
      } else if (this.Mint.In1NER_Multi_Insulate_Ohm_x == "1") {
        this.Mout.Out1NER_Multi_ToScreen_x_x = "----";
        this.multimeterScreenUnit = "----";
        this.multimeterScreenUnitSelf = "----";
      }
    },
    blackHotspotStop(top: string, left: string) {
      if (this.svgRecoverStatus == 1) {
        this.multimeterblackRecover();
      } else {
        this.svgRecoverStatus = 1;
      }

      if (top && left) {
        this.multimeterblackRecover(top, left);
      }

      //  判断是否测量了电阻(两个表针是否都测量了，并且是否打到欧姆档)
      if (
        this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1" &&
        this.Radrepetition != "0" &&
        this.Blackrepetition != "0"
      ) {
        //  创建警告框
        if (parseInt(this.Radrepetition) <= 1000) {
          //  $rootScope.createResistanceWarn('此功能不能用');
        }
      }
      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        //  if (this.multimeter_black == 0 && this.multimeter_red == 0) {
        //      //                       $('.buttonflash').animate({'opacity':1},250,function(){$('.buttonflash').animate({'opacity':0},250)})
        //      //  this.openbuttonflash();
        //      //  this.continuebuttonflash(this.buttonflash);
        //      $('.buttonflash').css('z-index', 3);
        //      $('.clickcircle ').css('z-index', 1);
        //      this.multimeterScreenNum = '1.';
        //      this.multimeterScreenUnit = '';
        //  } else {
        //      this.multimeterScreenNum = '1.';
        //      this.multimeterScreenUnit = '';
        //      //  this.closebuttonflash();
        //  }
      }
      // 进度点记录
      this.communicationService.setAction({
        id: "v03",
        flag: "",
        sub: "",
        value: "blackUesd"
      });
    },
    maskMultimeterDrag(top: string, left: string) {
      // 红黑表笔都不在热区上时万用表的拖动
      if (
        this.multimeter_body == 1 &&
        this.multimeter_red == 1 &&
        this.multimeter_black == 1
      ) {
        if (top && left) {
          $("#mask-multimeter").css({ top: top, left: left });
        }
        var topInt = top
          ? parseInt(top, 10)
          : parseInt($("#mask-multimeter").css("top"), 10),
          leftInt = left
            ? parseInt(left, 10)
            : parseInt($("#mask-multimeter").css("left"), 10),
          toppoint = topInt - 80,
          leftpoint = leftInt - 290;
        if (leftpoint > 355) {
          // $('.multimeter-contain').css('z-index', '7');
        } else {
          //  $('.multimeter-contain').css('z-index', '5');
        }
        $("#hhjmultimeterRed").css("top", "" + (toppoint + 97) + "px");
        $("#hhjmultimeterRed").css("left", "" + (leftpoint + 497) + "px");
        $("#hhjmultimeterRed-hotspot").css("top", "" + (toppoint + 412) + "px");
        $("#hhjmultimeterRed-hotspot").css(
          "left",
          "" + (leftpoint + 501) + "px"
        );
        $("#hhjmultimeterBlack").css("top", "" + (toppoint + 97) + "px");
        $("#hhjmultimeterBlack").css("left", "" + (leftpoint + 270) + "px");
        $("#hhjmultimeterBlack-hotspot").css(
          "top",
          "" + (toppoint + 416) + "px"
        );
        $("#hhjmultimeterBlack-hotspot").css(
          "left",
          "" + (leftpoint + 270) + "px"
        );
        this.Param_redx = leftpoint + 450;
        this.Param_redy = toppoint + 40;
        this.Param_redcx = leftpoint + 420;
        this.Param_redcy = toppoint + 37;
        this.Param_redpx = leftpoint + 403;
        this.Param_redpy = toppoint + 325;

        this.Param_blackx = leftpoint + 282;
        this.Param_blacky = toppoint + 100;
        this.Param_blackcx = leftpoint + 302;
        this.Param_blackcy = toppoint + 37;
        this.Param_blackpx = leftpoint + 376;
        this.Param_blackpy = toppoint + 325;
        this.Param_redpx = this.Param_redpx - 30;
        this.Param_redpy = this.Param_redpy - 253;
        $("#path_Red").attr(
          "d",
          "M" +
          this.Param_redx +
          " " +
          this.Param_redy +
          // ' C' +
          // this.Param_redx +
          // ' ' +
          // this.Param_redy +
          // ' ' +
          // this.Param_redcx +
          // ' ' +
          // this.Param_redcy +
          " " +
          this.Param_redpx +
          " " +
          this.Param_redpy
        );
        this.Param_blackx = this.Param_blackx - 60;
        this.Param_blacky = this.Param_blacky - 60;
        this.Param_blackpx = this.Param_blackpx - 50;
        this.Param_blackpy = this.Param_blackpy - 220;
        $("#path_black").attr(
          "d",
          "M" +
          this.Param_blackx +
          " " +
          this.Param_blacky +
          // ' C' +
          // this.Param_blackx +
          // ' ' +
          // this.Param_blacky +
          // ' ' +
          // this.Param_blackcx +
          // ' ' +
          // this.Param_blackcy +
          " " +
          this.Param_blackpx +
          " " +
          this.Param_blackpy
        );

        this.multimeterredstartx = this.Param_redx;
        this.multimeterredstarty = this.Param_redy;
        this.multimeterredradianx = this.Param_redcx;
        this.multimeterredradiany = this.Param_redcy;
        this.multimeterredstopx = this.Param_redpx;
        this.multimeterredstopy = this.Param_redpy;

        this.multimeterblackstartx = this.Param_blackx;
        this.multimeterblackstarty = this.Param_blacky;
        this.multimeterblackradianx = this.Param_blackcx;
        this.multimeterblackradiany = this.Param_blackcy;
        this.multimeterblackstopx = this.Param_blackpx;
        this.multimeterblackstopy = this.Param_blackpy;
      }
      // 当黑表笔都在热区上时，万用表整体的拖动
      if (
        this.multimeter_body == 1 &&
        this.multimeter_red == 1 &&
        this.multimeter_black == 0
      ) {
        if (top && left) {
          $("#mask-multimeter").css({ top: top, left: left });
        }
        var blackLeftInt =
          parseInt(
            $("#hhjmultimeterBlack")
              .css("left")
              .replace("px", "")
          ) + 10,
          blackTopInt =
            parseInt(
              $("#hhjmultimeterBlack")
                .css("top")
                .replace("px", "")
            ) + 5,
          topInt = top
            ? parseInt(top)
            : parseInt(
              $("#mask-multimeter")
                .css("top")
                .replace("px", "")
            ),
          leftInt = left
            ? parseInt(left)
            : parseInt(
              $("#mask-multimeter")
                .css("left")
                .replace("px", "")
            ),
          cl = blackLeftInt - 40,
          ct = blackTopInt - 80;

        toppoint = topInt - 80;
        leftpoint = leftInt - 290;
        if (leftpoint > 355) {
          // $('.multimeter-contain').css('z-index', '7');
        } else {
          //  $('.multimeter-contain').css('z-index', '5');
        }
        $("#hhjmultimeterRed").css("top", "" + (toppoint + 97) + "px");
        $("#hhjmultimeterRed").css("left", "" + (leftpoint + 502) + "px");
        $("#hhjmultimeterRed-hotspot").css("top", "" + (toppoint + 416) + "px");
        $("#hhjmultimeterRed-hotspot").css(
          "left",
          "" + (leftpoint + 504) + "px"
        );
        // $('#hhjmultimeterBlack').css('top', '' + (toppoint + 97) + 'px');
        // $('#hhjmultimeterBlack').css('left', '' + (leftpoint + 245) + 'px');
        // $('#hhjmultimeterBlack-hotspot').css('top', '' + (toppoint + 646) + 'px');
        // $('#hhjmultimeterBlack-hotspot').css('left', '' + (leftpoint + 245) + 'px');
        this.Param_blackx = blackLeftInt;
        this.Param_blacky = blackTopInt;
        this.Param_blackcx = cl;
        this.Param_blackcy = ct;
        this.Param_blackpx = leftInt + 90;
        this.Param_blackpy = topInt + 250;

        this.multimeterblackstartx = this.Param_blackx;
        this.multimeterblackstarty = this.Param_blacky;
        this.multimeterblackradianx = this.Param_blackcx;
        this.multimeterblackradiany = this.Param_blackcy;
        this.multimeterblackstopx = this.Param_blackpx;
        this.multimeterblackstopy = this.Param_blackpy;

        this.Param_redx = leftpoint + 440;
        this.Param_redy = toppoint + 100;
        this.Param_redcx = leftpoint + 420;
        this.Param_redcy = toppoint + 37;
        this.Param_redpx = leftpoint + 403;
        this.Param_redpy = toppoint + 325;

        this.multimeterredstartx = this.Param_redx;
        this.multimeterredstarty = this.Param_redy;
        this.multimeterredradianx = this.Param_redcx;
        this.multimeterredradiany = this.Param_redcy;
        this.multimeterredstopx = this.Param_redpx;
        this.multimeterredstopy = this.Param_redpy;
        this.Param_redx = this.Param_redx + 10;
        this.Param_redy = this.Param_redy - 60;
        this.Param_redpx = this.Param_redpx - 60;
        this.Param_redpy = this.Param_redpy - 210;
        $("#path_Red").attr(
          "d",
          "M" +
          this.Param_redx +
          " " +
          this.Param_redy +
          // ' C' +
          // this.Param_redx +
          // ' ' +
          // this.Param_redy +
          // ' ' +
          // this.Param_redcx +
          // ' ' +
          // this.Param_redcy +
          " " +
          this.Param_redpx +
          " " +
          this.Param_redpy
        );
        this.Param_blackx = this.Param_blackx - 60;
        this.Param_blacky = this.Param_blacky - 65;
        this.Param_blackpx = this.Param_blackpx - 50;
        this.Param_blackpy = this.Param_blackpy - 240;
        $("#path_black").attr(
          "d",
          "M" +
          this.Param_blackx +
          " " +
          this.Param_blacky +
          // ' C' +
          // this.Param_blackx +
          // ' ' +
          // this.Param_blacky +
          // ' ' +
          // this.Param_blackcx +
          // ' ' +
          // this.Param_blackcy +
          " " +
          this.Param_blackpx +
          " " +
          this.Param_blackpy
        );
      } // 当红表笔都在热区上时，万用表整体的拖动
      if (
        this.multimeter_body == 1 &&
        this.multimeter_red == 0 &&
        this.multimeter_black == 1
      ) {
        if (top && left) {
          $("#mask-multimeter").css({ top: top, left: left });
        }
        this.Param_stasds = 1;
        var redLeftInt =
          parseInt(
            $("#hhjmultimeterRed")
              .css("left")
              .replace("px", "")
          ) + 10,
          redTopInt =
            parseInt(
              $("#hhjmultimeterRed")
                .css("top")
                .replace("px", "")
            ) - 104,
          topInt = top
            ? parseInt(top)
            : parseInt(
              $("#mask-multimeter")
                .css("top")
                .replace("px", "")
            ),
          leftInt = left
            ? parseInt(left)
            : parseInt(
              $("#mask-multimeter")
                .css("left")
                .replace("px", "")
            ),
          cl = redLeftInt - 40,
          ct = redTopInt - 80;

        toppoint = topInt - 80;
        leftpoint = leftInt - 290;
        if (leftpoint > 355) {
          // $('.multimeter-contain').css('z-index', '7');
        } else {
          // $('.multimeter-contain').css('z-index', '5');
        }

        // $('#hhjmultimeterRed').css('top', '' + (toppoint + 97) + 'px');
        // $('#hhjmultimeterRed').css('left', '' + (leftpoint + 645) + 'px');
        // $('#hhjmultimeterRed-hotspot').css('top', '' + (toppoint + 646) + 'px');
        // $('#hhjmultimeterRed-hotspot').css('left', '' + (leftpoint + 644) + 'px');
        $("#hhjmultimeterBlack").css("top", "" + (toppoint + 97) + "px");
        $("#hhjmultimeterBlack").css("left", "" + (leftpoint + 270) + "px");
        $("#hhjmultimeterBlack-hotspot").css(
          "top",
          "" + (toppoint + 416) + "px"
        );
        $("#hhjmultimeterBlack-hotspot").css(
          "left",
          "" + (leftpoint + 270) + "px"
        );
        this.Param_redx = redLeftInt;
        this.Param_redy = redTopInt + 110;
        this.Param_redcx = cl;
        this.Param_redcy = ct;
        this.Param_redpx = leftInt + 114;
        this.Param_redpy = topInt + 260;

        this.multimeterredstartx = this.Param_redx;
        this.multimeterredstarty = this.Param_redy;
        this.multimeterredradianx = this.Param_redcx;
        this.multimeterredradiany = this.Param_redcy;
        this.multimeterredstopx = this.Param_redpx;
        this.multimeterredstopy = this.Param_redpy;
        this.Param_blackx = leftpoint + 282;
        this.Param_blacky = toppoint + 100;
        this.Param_blackcx = leftpoint + 302;
        this.Param_blackcy = toppoint + 37;
        this.Param_blackpx = leftpoint + 376;
        this.Param_blackpy = toppoint + 325;

        this.multimeterblackstartx = this.Param_blackx;
        this.multimeterblackstarty = this.Param_blacky;
        this.multimeterblackradianx = this.Param_blackcx;
        this.multimeterblackradiany = this.Param_blackcy;
        this.multimeterblackstopx = this.Param_blackpx;
        this.multimeterblackstopy = this.Param_blackpy;
        this.Param_redx = this.Param_redx - 60;
        this.Param_redy = this.Param_redy - 65;
        this.Param_redpx = this.Param_redpx - 50;
        this.Param_redpy = this.Param_redpy - 260;
        $("#path_Red").attr(
          "d",
          "M" +
          this.Param_redx +
          " " +
          this.Param_redy +
          // ' C' +
          // this.Param_redx +
          // ' ' +
          // this.Param_redy +
          // ' ' +
          // this.Param_redcx +
          // ' ' +
          // this.Param_redcy +
          " " +
          this.Param_redpx +
          " " +
          this.Param_redpy
        );
        this.Param_blackx = this.Param_blackx - 60;
        this.Param_blacky = this.Param_blacky - 60;
        this.Param_blackpx = this.Param_blackpx - 60;
        this.Param_blackpy = this.Param_blackpy - 220;
        $("#path_black").attr(
          "d",
          "M" +
          this.Param_blackx +
          " " +
          this.Param_blacky +
          // ' C' +
          // this.Param_blackx +
          // ' ' +
          // this.Param_blacky +
          // ' ' +
          // this.Param_blackcx +
          // ' ' +
          // this.Param_blackcy +
          " " +
          this.Param_blackpx +
          " " +
          this.Param_blackpy
        );
      } // 当红黑表笔都在热区上时，万用表整体的拖动
      if (
        this.multimeter_body == 1 &&
        this.multimeter_red == 0 &&
        this.multimeter_black == 0
      ) {
        if (top && left) {
          $("#mask-multimeter").css({ top: top, left: left });
        }
        var redLeftInt =
          parseInt(
            $("#hhjmultimeterRed")
              .css("left")
              .replace("px", "")
          ) + 10,
          redTopInt =
            parseInt(
              $("#hhjmultimeterRed")
                .css("top")
                .replace("px", "")
            ) - 104,
          blackLeftInt =
            parseInt(
              $("#hhjmultimeterBlack")
                .css("left")
                .replace("px", "")
            ) + 10,
          blackTopInt =
            parseInt(
              $("#hhjmultimeterBlack")
                .css("top")
                .replace("px", "")
            ) + 10,
          topInt = top
            ? parseInt(top)
            : parseInt(
              $("#mask-multimeter")
                .css("top")
                .replace("px", "")
            ),
          leftInt = left
            ? parseInt(left)
            : parseInt(
              $("#mask-multimeter")
                .css("left")
                .replace("px", "")
            ),
          redcl = redLeftInt - 40,
          redct = redTopInt - 80,
          blackcl = blackLeftInt - 40,
          blackct = blackTopInt - 80;

        this.Param_redx = redLeftInt;
        this.Param_redy = redTopInt + 110;
        this.Param_redcx = redcl;
        this.Param_redcy = redct;
        this.Param_redpx = leftInt + 114;
        this.Param_redpy = topInt + 250;

        this.multimeterredstartx = this.Param_redx;
        this.multimeterredstarty = this.Param_redy;
        this.multimeterredradianx = this.Param_redcx;
        this.multimeterredradiany = this.Param_redcy;
        this.multimeterredstopx = this.Param_redpx;
        this.multimeterredstopy = this.Param_redpy;

        this.Param_blackx = blackLeftInt;
        this.Param_blacky = blackTopInt;
        this.Param_blackcx = blackcl;
        this.Param_blackcy = blackct;
        this.Param_blackpx = leftInt + 90;
        this.Param_blackpy = topInt + 250;

        this.multimeterblackstartx = this.Param_blackx;
        this.multimeterblackstarty = this.Param_blacky;
        this.multimeterblackradianx = this.Param_blackcx;
        this.multimeterblackradiany = this.Param_blackcy;
        this.multimeterblackstopx = this.Param_blackpx;
        this.multimeterblackstopy = this.Param_blackpy;

        // 测量点记录
        this.recordProgress();

        this.Param_redx = this.Param_redx - 60;
        this.Param_redy = this.Param_redy - 65;
        this.Param_redpx = this.Param_redpx - 60;
        this.Param_redpy = this.Param_redpy - 240;
        $(document)
          .find("#path_Red")
          .attr(
            "d",
            "M" +
            this.Param_redx +
            " " +
            this.Param_redy +
            // ' C' +
            // this.Param_redx +
            // ' ' +
            // this.Param_redy +
            // ' ' +
            // this.Param_redcx +
            // ' ' +
            // this.Param_redcy +
            " " +
            this.Param_redpx +
            " " +
            this.Param_redpy
          );
        this.Param_blackx = this.Param_blackx - 60;
        this.Param_blacky = this.Param_blacky - 65;
        this.Param_blackpx = this.Param_blackpx - 60;
        this.Param_blackpy = this.Param_blackpy - 240;
        $(document)
          .find("#path_black")
          .attr(
            "d",
            "M" +
            this.Param_blackx +
            " " +
            this.Param_blacky +
            // ' C' +
            // this.Param_blackx +
            // ' ' +
            // this.Param_blacky +
            // ' ' +
            // this.Param_blackcx +
            // ' ' +
            // this.Param_blackcy +
            " " +
            this.Param_blackpx +
            " " +
            this.Param_blackpy
          );
      }
    },

    // 表笔移动

    dragStart() {
      let _this: any = this;
      // 红表笔drag，通过一个小块热区带动红表笔
      $("#hhjmultimeterRed-hotspot").draggable({
        containment: ".container", // 只能在规定范围
        scroll: false, // 不出现滚动条
        iframeFix: true, // 不受iframe的影响
        cursor: "move", //拖动的鼠标样式
        drag: function (event) {
          _this.redHotspotDrag(null, null, $(event.target).attr("id"));
        },
        stop: function () {
          _this.redHotspotStop(null, null);
        }
      });
      // 黑表笔drag，通过一个小块热区带动红表笔
      $("#hhjmultimeterBlack-hotspot").draggable({
        containment: ".container",
        scroll: false,
        iframeFix: true,
        cursor: "move",
        drag: function (event) {
          _this.blackHotspotDrag(null, null, $(event.target).attr("id"));
        },

        stop: function () {
          _this.blackHotspotStop(null, null);
        }
      });

      // 整个万用表drag，通过万用表表身带动红表笔
      $("#mask-multimeter").draggable({
        containment: ".container",
        scroll: false,
        cursor: "move",
        // iframeFix: true,
        drag: function (event) {
          _this.maskMultimeterDrag(null, null);
        }
      });
    },

    multimeterShortcutHtml(href) {
      if (this.multimeterStatus) {
        if (
          this.w_multimeter_blackHtml == href ||
          this.w_multimeter_blackHtml == null
        ) {
          this.SvgBlackStatus = true;
        } else {
          this.SvgBlackStatus = false;
        }
        if (
          this.w_multimeter_redHtml == href ||
          this.w_multimeter_redHtml == null
        ) {
          this.SvgRedStatus = true;
        } else {
          this.SvgRedStatus = false;
        }
      }
    },
    multimeteroff() {
      //  万用表OFF档位
      this.circleareaAnimate(false);
      this.changeFilesInit();
      this.Mint.In1NER_Multi_Off_x_x = "1";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.multimeterinsulated = false;
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.multimeterScreenStatus = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "";
      this.multimeterScreenUnitSelf = "";
      this.multimeterScreenNum = "";
      //  $('.multimeter-top').css({ 'left': '9px', 'top': '15px' });
      $(".opacitybox").show();
      $(".multimeter-bottom").css("transform", "rotate(0deg)");
      //  关闭热区板
      // $('.multimeterBlack').css('background-image', 'url(./images/36704121.png)')
      // $('.multimeterRed').css('background-image', 'url(./images/3670412.png)')
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "62px",
        bottom: "45px"
      });
      $(".multimeter-black").css({ right: "77px" });
      switch (this.appService.progressData.describeFlag) {
        case 15:
          $(".bgpic-circuit").css(
            "backgroundImage",
            'url("./assets/images/skill/1.png")'
          );
          break;
        case 21:
          $(".bgpic-circuit").css(
            "backgroundImage",
            'url("./assets/images/skill/5.png")'
          );
          break;
      }
    },

    // 交流电压
    multimetervv() {
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.wybShow = this.multimeterScreenNum;
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "V";
      this.multimeterScreenUnitSelf = "V";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "1";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      switch (
      parseInt(
        $(".bgpic-circuit")
          .css("backgroundImage")
          .match(/\d+/g)[0]
      )
      ) {
        case 1:
          $(".bgpic-circuit").css("background", "./images/3.png");
          break;
      }
      $(".multimeter-bottom").css("transform", "rotate(56deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
      this.isDrop(null, null, false);
      let that = this;
      setTimeout(() => {
        this.freshHontspot();
      });
    },

    // In1NER_Multi_DCVlt_x_x 直流电压
    multimeterv() {
      if (this.appService.progressData.describeFlag !== 21) {
        this.handleErrorService.handleError({ message: "此功能不可用" });
        return;
      }
      this.changeFilesInit();
      setTimeout(() => {
        this.freshHontspot();
      });
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.wybShow = this.multimeterScreenNum;
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "V~";
      this.multimeterScreenUnitSelf = "V~";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "1";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      console.log(this.Mint.In1NER_Multi_Insulate_Ohm_x, "898989898");
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(27deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
      // 测量点记录
      // $rootScope.recordProgress();
      // this.isDrop(null, null, false);
    },

    multimetermv() {
      this.handleErrorService.handleError({ message: "此功能不可用" });
      return;
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenUnit = "mV";
      this.multimeterScreenUnitSelf = "mV";
      this.multimetershowDateUnit = "";
      this.multimeterScreenrightUnit = "";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "1";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      // // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(87deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
    },

    // 万用表绝缘电阻档位
    multimeterres() {
      if (this.appService.progressData.describeFlag !== 27) {
        this.handleErrorService.handleError({ message: "此功能不可用" });
        return;
      }
      setTimeout(() => {
        this.freshHontspot();
      });

      this.changeFilesInit();
      this.resShow = "----";
      this.multimeterresdw = "MΩ";
      this.multimeterScreenNum = "----";
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = true;
      this.multimeterScreenUnit = "----"; // 去除Ω
      this.multimeterScreenUnitSelf = "----"; // 去除Ω
      this.multimeterScreenrightUnit = "500v"; // 去除Ω
      this.multimetershowDateUnit = "VDC";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "1";
      $(".opacitybox").hide();
      if (this.dropsuccessNum && this.dropsuccessNum != 0) {
        // this.circleareaAnimate(true);
      }
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(200deg)");
      $(".multimeterBlack")
        .addClass("multimeterjiaziBlack")
        .removeClass(".multimeterBlack");
      $(".multimeterRed")
        .addClass("multimeterjiaziRed")
        .removeClass(".multimeterRed");
      // this.multimeterredRecover();
      // this.multimeterblackRecover();
      $(".multimeter-arrow2")
        .stop()
        .hide();
      $(".multimeter-Red").css({
        transform: "rotate(-57deg)",
        right: "159px",
        bottom: "53px"
      });
      $(".multimeter-black").css({ right: "177px" });
      // 测量点记录
      this.communicationService.setAction({
        id: "v01",
        flag: "",
        sub: "",
        value: "res"
      });
    },
    multimeternofine() {
      this.handleErrorService.handleError({ message: "此功能不可用" });
      return;
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "";
      this.multimeterScreenUnitSelf = "";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "1";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(145deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "62px",
        bottom: "45px"
      });
      $(".multimeter-black").css({ right: "77px" });
    },
    multimeterAA() {
      this.handleErrorService.handleError({ message: "此功能不可用" });
      return;
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.multimeterScreenStatus = true;
      this.multimetershowDateUnit = "";
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimeterScreenUnit = "A~";
      this.multimeterScreenUnitSelf = "A~";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "1";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(160deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
    },
    multimeterk() {
      if (this.appService.progressData.describeFlag == 27) {
        this.handleErrorService.handleError({ message: "此功能不可用" });
        return;
      }

      this.halo = "halo";
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "OL";
      this.wybShow = this.multimeterScreenNum;
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "Ω";
      this.multimeterScreenUnitSelf = "Ω";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "1";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "1";
      this.Mint.In1NER_Multi_mirAmp_x_x = "0";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      setTimeout(() => {
        this.freshHontspot();
      });
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(120deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-arrow1")
        .stop()
        .hide();
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
      // 进度点记录
      this.communicationService.setAction({
        id: "v01",
        flag: "",
        sub: "",
        value: "欧姆"
      });

      this.isDrop(null, null, true);
    },

    multimetermA() {
      this.handleErrorService.handleError({ message: "此功能不可用" });
      return;
      this.changeFilesInit();
      this.circleareaAnimate(false);
      this.multimeterScreenNum = "0";
      this.multimeterScreenStatus = true;
      this.multimeterinsulated = false;
      this.multimeterScreenrightUnit = "";
      this.multimetershowDateUnit = "";
      this.multimeterScreenUnit = "mA";
      this.multimeterScreenUnitSelf = "mA";
      this.Mint.In1NER_Multi_Off_x_x = "0";
      this.Mint.In1NER_Multi_ACVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCVlt_x_x = "0";
      this.Mint.In1NER_Multi_DCmVlt_x_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.Mint.In1NER_Multi_hFE_x_x = "0";
      this.Mint.In1NER_Multi_Amp_x_x = "0";
      this.Mint.In1NER_Multi_mAmp_x_x = "0";
      this.Mint.In1NER_Multi_mirAmp_x_x = "1";
      // $('.multimeter-top').css({ 'left': '25px', 'top': '25px' });
      $(".multimeter-bottom").css("transform", "rotate(175deg)");
      $(".opacitybox").show();
      $(".multimeterjiaziBlack")
        .addClass("multimeterBlack")
        .removeClass("multimeterjiaziBlack");
      $(".multimeterjiaziRed")
        .addClass("multimeterRed")
        .removeClass("multimeterjiaziRed");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "59px",
        bottom: "46px"
      });
      $(".multimeter-black").css({ right: "77px" });
    },

    // 切换万用表档位，初始化表笔（归位），数值初始化
    changeFilesInit() {
      this.multimeterredRecover();
      this.multimeterblackRecover();

      this.dropBlackID = null;
      this.dropRedID = null;
    },
    multimeterCircle() {
      if (
        this.Mint.In1NER_Multi_Insulate_Ohm_x === "0" ||
        !this.isInsulationRes ||
        !this.multimeterblackPosition ||
        !this.multimeterredPosition
      ) {
        return;
      }
      this.insulationRes();
      this.multimeterScreenUnitSelf = "525";
    },
    closemultimeter() {
      $(".test1").css("opacity", 0);
      // $('.multimeterBlack').css('background-image', 'url(./app/components/multimeter/images/36704121.png)');
      //  $('.multimeterRed').css('background-image', 'url(./app/components/multimeter/images/3670412.png)');
      // 具体注释见js/angularJs/Service.js
      this.multimeteroff();
      this.circleareaAnimate(false);
      this.multimeterinsulated = false;
      this.dropsuccessNum = "";
      this.redposition = "";
      this.blackposition = "";
      this.multimeterStatus = false;
      this.multimeter_drag = "0";
      (this.Mint.In1NER_Multi_Red_x_x = "0"),
        (this.Mint.In1NER_Multi_Black_x_x = "0");
      this.w_multimeter_redHtml = null;
      this.w_multimeter_blackHtml = null;
      this.SvgStatus = false;
      this.multimeter_red = "0";
      this.multimeter_black = "0";
      this.wanyongbiao = "0";
      this.svgRecoverStatus = "1";
      this.multimeterblackPosition = null;
      this.multimeterredPosition = null;
      this.Radrepetition = "0";
      this.Blackrepetition = "0";
      this.multimeter_red = "1";
      this.multimeter_black = "1";
      this.Mint.In1NER_Multi_Insulate_Ohm_x = "0";
      this.Mint.In1NER_Multi_Pass2Ohm_x_x = "0";
      this.multimeterredstartx = this.Param_redx = "440"; // 红色表线起始x坐标
      this.multimeterredstarty = this.Param_redy = "100"; // 红色表线起始y坐标
      this.multimeterredradianx = this.Param_redcx = "420"; // 红色表线曲线拐x坐标
      this.multimeterredradiany = this.Param_redcy = "37"; // 红色表线曲线拐y坐标
      this.multimeterredstopx = this.Param_redpx = "403"; // 红色表线曲线结束x坐标
      this.multimeterredstopy = this.Param_redpy = "375"; // 红色表线曲线结束x坐标
      this.multimeterblackstartx = this.Param_blackx = "282";
      this.multimeterblackstarty = this.Param_blacky = "100";
      this.multimeterblackradianx = this.Param_blackcx = "302";
      this.multimeterblackradiany = this.Param_blackcy = "37";
      this.multimeterblackstopx = this.Param_blackpx = "376";
      this.multimeterblackstopy = this.Param_blackpy = "375";
      $("#mask-multimeter").css("top", "80px");
      $("#mask-multimeter").css("left", "290px");
      $("#hhjmultimeterRed").css("top", "97px");
      $("#hhjmultimeterRed").css("left", "515px");
      $("#hhjmultimeterBlack").css("top", "97px");
      $("#hhjmultimeterBlack").css("left", "254px");
      $("#hhjmultimeterRed-hotspot").css("top", "690px");
      $("#hhjmultimeterRed-hotspot").css("left", "695px");
      $("#hhjmultimeterBlack-hotspot").css("top", "690px");
      $("#hhjmultimeterBlack-hotspot").css("left", "262px");
      $(".multimeter-Red").css({
        transform: "rotate(-30deg)",
        right: "62px",
        bottom: "45px"
      });
      $(".multimeter-black").css({ right: "77x" });

      $("#path_Red").attr(
        "d",
        "M" +
        this.multimeterredstartx +
        " " +
        this.multimeterredstarty +
        // ' C' +
        // this.multimeterredstartx +
        // ' ' +
        // this.multimeterredstarty +
        // ' ' +
        // this.multimeterredradianx +
        // ' ' +
        // this.multimeterredradiany +
        " " +
        this.multimeterredstopx +
        " " +
        this.multimeterredstopy
      );
      $("#path_black").attr(
        "d",
        "M" +
        this.multimeterblackstartx +
        " " +
        this.multimeterblackstarty +
        // ' C' +
        // this.multimeterblackstartx +
        // ' ' +
        // this.multimeterblackstarty +
        // ' ' +
        // this.multimeterblackradianx +
        // ' ' +
        // this.multimeterblackradiany +
        " " +
        this.multimeterblackstopx +
        " " +
        this.multimeterblackstopy
      );
      // 去除右侧工具栏的触发状态
      $(".right-multimeter")
        .parent()
        .removeClass("active");
      // 隐藏热区
      //  hideAHot();
      // 把状态码设为0；
      // **multimeterStay = 0;
    },

    // 测量点记录
    recordProgress() { },
    judgeS: function (href) {
      if (this.multimeterStatus) {
        if (
          this.w_multimeter_blackHtml == href ||
          this.w_multimeter_blackHtml == null
        ) {
          this.SvgBlackStatus = true;
        } else {
          this.SvgBlackStatus = false;
        }
        if (
          this.w_multimeter_redHtml == href ||
          this.w_multimeter_redHtml == null
        ) {
          this.SvgRedStatus = true;
        } else {
          this.SvgRedStatus = false;
        }
      }
    },

    // 热区吸附后
    freshHontspotDrop(eventID, uiDraggableID) {
      // 红表笔位置的top值，用来判断表笔层级
      var redPositionTop = 0;
      // 黑表笔位置的top值，用来判断表笔层级
      var blackPositionTop = 0;
      //  通过这两个属性进行表笔的定位
      let hTop = $(eventID).attr("h-top"),
        hLeft = $(eventID).attr("h-left");

      if (
        uiDraggableID == "hhjmultimeterRed-hotspot" &&
        this.multimeterblackPosition != $(eventID).attr("wybredPosition")
      ) {
        if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
          $("#path_Red").css("stroke", "#db3040");
          this.multimeterScreenUnit = "Ω";
          this.multimeterScreenUnitSelf = "Ω";
          //  $('#hhjmultimeterRed').css('background', 'url(./app/components/multimeter/images/clip_r.png)');
        } else {
          $("#path_Red").css("stroke", "#db3040");
        }
        this.redposition = $(eventID).attr("wybredPosition") || 0;
        $("#hhjmultimeterRed-hotspot").css({
          top: "" + (parseInt(hTop) + 20) + "px",
          left: "" + parseInt(hLeft) + "px"
        });
        $("#hhjmultimeterRed").css({
          top:
            "" +
            (parseInt($("#hhjmultimeterRed-hotspot").css("top")) -
              $("#hhjmultimeterRed").height() +
              58) +
            "px",
          left: "" + parseInt($("#hhjmultimeterRed-hotspot").css("left")) + "px"
        });
        $("#hhjmultimeterRed").addClass("multimeterRed-on");
        var redLeftInt = parseInt(hLeft) - 5,
          redTopInt = parseInt(hTop) + 40,
          //  topInt = parseInt(hTop) + 295,
          //  leftInt = parseInt(hLeft) + 113,
          cl = redLeftInt - 40,
          ct = redTopInt + 80;

        $("#path-Red").attr(
          "d",
          "M" +
          redLeftInt +
          " " +
          redTopInt +
          // ' C' +
          // redLeftInt +
          // ' ' +
          // redTopInt +
          // ' ' +
          // cl +
          // ' ' +
          // ct +
          " 523 291"
        );
        this.multimeter_red = 0;
        this.Mint.In1NER_Multi_Red_x_x = $(eventID).attr("rqPosition");
        this.Radrepetition = $(eventID).attr("rqPosition"); // 记忆已经有一只放在热区上
        this.multimeterredstartx =
          parseInt($("#hhjmultimeterRed").css("left")) + 10;
        this.multimeterredstarty =
          parseInt($("#hhjmultimeterRed").css("top")) + 5;
        this.multimeterredradianx =
          parseInt($("#hhjmultimeterRed").css("left")) - 90;
        this.multimeterredradiany =
          parseInt($("#hhjmultimeterRed").css("top")) - 90;
        this.multimeterredstopx =
          parseInt($("#mask-multimeter").css("left")) + 114;
        this.multimeterredstopy =
          parseInt($("#mask-multimeter").css("top")) + 258;
        this.svgRecoverStatus = 0;
        this.w_multimeter_redHtml = $(eventID).attr("h_href");
        this.multimeterredPosition = $(eventID).attr("wybredPosition");
        this.multimeterredstartx = this.multimeterredstartx - 60;
        this.multimeterredstarty = this.multimeterredstarty - 65;
        this.multimeterredstopx = this.multimeterredstopx - 50;
        this.multimeterredstopy = this.multimeterredstopy - 200;
        $("#path_Red").attr(
          "d",
          "M" +
          this.multimeterredstartx +
          " " +
          this.multimeterredstarty +
          // ' C' +
          // this.multimeterredstartx +
          // ' ' +
          // this.multimeterredstarty +
          // ' ' +
          // this.multimeterredradianx +
          // ' ' +
          // this.multimeterredradiany +
          " " +
          this.multimeterredstopx +
          " " +
          this.multimeterredstopy
        );

        // 测量点记录
        this.recordProgress();
        // 红黑表笔层级判断
        redPositionTop = parseInt($("#hhjmultimeterRed").css("top"));
        blackPositionTop = parseInt($("#hhjmultimeterBlack").css("top"));
        this.isDrop($(eventID).attr("id"), uiDraggableID, false);
      } else if (
        uiDraggableID == "hhjmultimeterBlack-hotspot" &&
        this.multimeterredPosition != $(eventID).attr("wybblackPosition")
      ) {
        if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
          $("#path_black").css("stroke", "#656261");
          this.multimeterScreenUnit = "Ω";
          this.multimeterScreenUnitSelf = "Ω";
          //  $('#hhjmultimeterBlack').css('background', 'url(./app/components/multimeter/images/clip_b.png)');
        } else {
          $("#path_black").css("stroke", "#656261");
        }
        this.blackposition = $(eventID).attr("wybblackPosition") || 0;
        $("#hhjmultimeterBlack-hotspot").css({
          top: "" + (parseInt(hTop) + 20) + "px",
          left: "" + parseInt(hLeft) + "px"
        });
        $("#hhjmultimeterBlack").addClass("multimeterBlack-on");
        $("#hhjmultimeterBlack").css({
          top:
            "" +
            (parseInt($("#hhjmultimeterBlack-hotspot").css("top")) -
              $("#hhjmultimeterBlack").height() +
              58) +
            "px",
          left:
            "" + parseInt($("#hhjmultimeterBlack-hotspot").css("left")) + "px"
        });
        var blackLeftInt = parseInt(hLeft) - 5,
          redTopInt = parseInt(hTop) + 40,
          //  topInt = parseInt(hTop) + 295,
          //  blackLeft = parseInt(hLeft) + 113,
          blackCl = blackLeftInt + 40,
          blackCt = redTopInt + 80;
        $("#path-black").attr(
          "d",
          "M" +
          blackLeftInt +
          " " +
          redTopInt +
          // ' C' +
          // blackLeftInt +
          // ' ' +
          // redTopInt +
          // ' ' +
          // blackCl +
          // ' ' +
          // blackCt +
          " 501 291 "
        );
        this.multimeter_black = 0;
        this.Blackrepetition = $(eventID).attr("rqPosition"); // 记忆已经有一只放在热区上
        this.multimeterblackstartx =
          parseInt($("#hhjmultimeterBlack").css("left"), 10) + 5;
        this.multimeterblackstarty =
          parseInt($("#hhjmultimeterBlack").css("top"), 10) + 5;
        this.multimeterblackradianx =
          parseInt($("#hhjmultimeterBlack").css("left"), 10) + 90;
        this.multimeterblackradiany =
          parseInt($("#hhjmultimeterBlack").css("top"), 10) - 90;
        this.multimeterblackstopx =
          parseInt($("#mask-multimeter").css("left"), 10) + 90;
        this.multimeterblackstopy =
          parseInt($("#mask-multimeter").css("top"), 10) + 260;
        this.svgRecoverStatus = 0;
        this.Mint.In1NER_Multi_Black_x_x = $(eventID).attr("rqPosition");
        this.w_multimeter_blackHtml = $(eventID).attr("h_href");
        this.multimeterblackPosition = $(eventID).attr("wybblackPosition");
        this.multimeterblackstartx = this.multimeterblackstartx - 60;
        this.multimeterblackstarty = this.multimeterblackstarty - 65;
        this.multimeterblackstopx = this.multimeterblackstopx - 70;
        this.multimeterblackstopy = this.multimeterblackstopy - 270;
        $("#path_black").attr(
          "d",
          "M" +
          this.multimeterblackstartx +
          " " +
          this.multimeterblackstarty +
          // ' C' +
          // this.multimeterblackstartx +
          // ' ' +
          // this.multimeterblackstarty +
          // ' ' +
          // this.multimeterblackradianx +
          // ' ' +
          // this.multimeterblackradiany +
          " " +
          this.multimeterblackstopx +
          " " +
          this.multimeterblackstopy
        );

        // 红黑表笔层级判断
        redPositionTop = parseInt($("#hhjmultimeterRed").css("top"));
        blackPositionTop = parseInt($("#hhjmultimeterBlack").css("top"));

        // 测量点记录
        this.recordProgress();
        this.isDrop($(eventID).attr("id"), uiDraggableID, false);
      } else if (
        uiDraggableID === "oscilloscopeHot-black" &&
        this.oscilloscopeService.Mdata.oscilloscopeRedPosition !==
        $(eventID).attr("wybblackPosition")
      ) {
        $("#oscilloscope-black").css(
          "top",
          "" + (parseInt($(eventID).attr("h-top"), 10) - 110) + "px"
        );
        $("#oscilloscope-black").css(
          "left",
          "" + (parseInt($(eventID).attr("h-left"), 10) - 68) + "px"
        );
        $("#oscilloscopeHot-black").css(
          "top",
          "" + (parseInt($(eventID).attr("h-top"), 10) + 77) + "px"
        );
        $("#oscilloscopeHot-black").css(
          "left",
          "" + (parseInt($(eventID).attr("h-left"), 10) - 70) + "px"
        );

        this.oscilloscopeService.Mdata.oscilloscope_test = true;
        this.oscilloscopeService.Mdata.oscilloscope_right = 0;
        this.oscilloscopeService.Mdata.svgRecoverStatus = 0;
        this.oscilloscopeService.Mdata.oscilloscope_Html = $(eventID).attr(
          "h_href"
        );
        this.oscilloscopeService.Mdata.oscilloscopeBlackPosition = $(
          eventID
        ).attr("wybblackPosition");
        this.Mint.In1MultiLogic_x_Black_x_x = $(eventID).attr("rqPosition");
        this.isOscilloscopeDrop();
      } else if (
        uiDraggableID === "oscilloscopeHot-red" &&
        this.oscilloscopeService.Mdata.oscilloscopeBlackPosition !==
        $(eventID).attr("wybredPosition")
      ) {
        $("#oscilloscope-red").css(
          "top",
          "" + (parseInt($(eventID).attr("h-top"), 10) - 110) + "px"
        );
        $("#oscilloscope-red").css(
          "left",
          "" + (parseInt($(eventID).attr("h-left"), 10) - 68) + "px"
        );
        $("#oscilloscopeHot-red").css(
          "top",
          "" + (parseInt($(eventID).attr("h-top"), 10) + 77) + "px"
        );
        $("#oscilloscopeHot-red").css(
          "left",
          "" + (parseInt($(eventID).attr("h-left"), 10) - 70) + "px"
        );

        this.oscilloscopeService.Mdata.oscilloscope_test = true;
        this.oscilloscopeService.Mdata.oscilloscope_left = 0;
        this.oscilloscopeService.Mdata.svgRecoverStatus = 0;
        this.oscilloscopeService.Mdata.oscilloscope_Html = $(eventID).attr(
          "h_href"
        );
        this.oscilloscopeService.Mdata.oscilloscopeRedPosition = $(
          eventID
        ).attr("wybredPosition");
        this.Mint.In1MultiLogic_x_Red_x_x = $(eventID).attr("rqPosition");
        this.isOscilloscopeDrop();

      } else {
      }

      // 万用表表笔层级判断
      if (blackPositionTop != 0 && redPositionTop != 0) {
        if (blackPositionTop > redPositionTop) {
          $("#hhjmultimeterRed").css("z-index", "10");
          $("#hhjmultimeterBlack").css("z-index", "11");
        } else {
          $("#hhjmultimeterRed").css("z-index", "11");
          $("#hhjmultimeterBlack").css("z-index", "10");
        }
      }

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        // 电阻测量不能进行
        //  if (uiDraggableID == 'hhjmultimeterRed-hotspot' && this.blackposition && (this.redposition === '5' || this.redposition === '6' || this.redposition === '7' || this.redposition === '8' || this.redposition === '9' || this.redposition === '10' || this.redposition === '1007' || this.redposition === '1008' || this.redposition === '1009' || this.redposition === '1010' || this.redposition === '1011' || this.redposition === '1012')) {
        //      this.falseconnectStatus = true;
        //  }
        //  if (uiDraggableID == 'hhjmultimeterBlack-hotspot' && this.redposition && (this.blackposition === '5' || this.blackposition === '6' || this.blackposition === '7' || this.blackposition === '8' || this.blackposition === '9' || this.blackposition === '10' || this.blackposition === '1007' || this.blackposition === '1008' || this.blackposition === '1009' || this.blackposition === '1010' || this.blackposition === '1011' || this.blackposition === '1012')) {
        //      this.falseconnectStatus = true;
        //  }
      }

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
        // setTimeout(() => {
        this.multimeterScreenUnit = "Ω";
        this.multimeterScreenUnitSelf = "Ω";
        // }, 10)
      }
    },

    freshHontspot() {
      let _this: any = this;
      $("body")
        .find("a")
        .droppable({
          accept:
            "#hhjmultimeterBlack-hotspot,#hhjmultimeterRed-hotspot,#oscilloscopeHot-red,#oscilloscopeHot-black",
          tolerance: "pointer",
          greedy: true,

          over: function (event, ui) {
            if (_this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
              if (ui.draggable[0].id == "hhjmultimeterBlack-hotspot") {
                $("#path_black").css("stroke", "#f69c19");
                //  $('#hhjmultimeterBlack').css('background', 'url(./app/components/multimeter/images/num1.png)')
              }
              if (ui.draggable[0].id == "hhjmultimeterRed-hotspot") {
                $("#path_Red").css("stroke", "#f69c19");
                //  $('#hhjmultimeterRed').css('background', 'url(./app/components/multimeter/images/num2.png)')
              }
            } else {
              if (ui.draggable[0].id == "hhjmultimeterBlack-hotspot") {
                $("#path_black").css("stroke", "#f69c19");
              }
              if (ui.draggable[0].id == "hhjmultimeterRed-hotspot") {
                $("#path_Red").css("stroke", "#f69c19");
              }
            }
          },

          out: function (event, ui) {
            if (_this.Mint.In1NER_Multi_Pass2Ohm_x_x == "1") {
              if (ui.draggable[0].id == "hhjmultimeterBlack-hotspot") {
                $("#path_black").css("stroke", "#656261");
                //  $('#hhjmultimeterBlack').css('background', 'url(./app/components/multimeter/images/clip_b.png)');
              }
              if (ui.draggable[0].id == "hhjmultimeterRed-hotspot") {
                $("#path_Red").css("stroke", "#e43846");
                //  $('#hhjmultimeterRed').css('background', 'url(./app/components/multimeter/images/clip_r.png)')
              }
            } else {
              if (ui.draggable[0].id == "hhjmultimeterBlack-hotspot") {
                $("#path_black").css("stroke", "#656261");
                _this.blackposition = "";
              }
              if (ui.draggable[0].id == "hhjmultimeterRed-hotspot") {
                $("#path_Red").css("stroke", "#e43846");
                _this.redposition = "";
              }
            }
            _this.circleareaAnimate(false);
          },

          drop: function (event, ui) {
            _this.freshHontspotDrop(
              "." +
              $(event.target)
                .attr("class")
                .split(" ")[0],
              ui.draggable[0].id,
              $(event.target).attr("id")
            );
          }
        });
    }, // 刷新热区

    multimeterblackRecover() {
      if (this.multimeterScreenUnit === "Ω") {
        this.wybShow = 'OL';
      } else if (this.multimeterScreenUnit === "V") {
        this.wybShow = '0';
      }
      this.blackposition = 0;
      this.resShow = "----";
      this.multimeterScreenNum = "----";
      this.w_multimeter_blackHtml = null;

      var topInt = parseInt($("#mask-multimeter").css("top")),
        leftInt = parseInt($("#mask-multimeter").css("left")),
        toppoint = topInt - 80,
        leftpoint = leftInt - 290;
      $("#path_black").css("stroke", "#656261");

      // $('#hhjmultimeterRed').css('top', '' + (toppoint + 97) + 'px');
      // $('#hhjmultimeterRed').css('left', '' + (leftpoint + 645) + 'px');
      // $('#hhjmultimeterRed-hotspot').css('top', '' + (toppoint + 646) + 'px');
      // $('#hhjmultimeterRed-hotspot').css('left', '' + (leftpoint + 644) + 'px');
      $("#hhjmultimeterBlack").css("top", "" + (toppoint + 97) + "px");
      $("#hhjmultimeterBlack").css("left", "" + (leftpoint + 270) + "px");
      $("#hhjmultimeterBlack-hotspot").css("top", "" + (toppoint + 416) + "px");
      $("#hhjmultimeterBlack-hotspot").css(
        "left",
        "" + (leftpoint + 270) + "px"
      );

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x === "1") {
        this.multimeterScreenNum = "OL";
      } else if (this.Mint.In1NER_Multi_Insulate_Ohm_x === "1") {
        this.multimeterScreenNum = "----";
      }

      this.Param_blackx = leftpoint + 282;
      this.Param_blacky = toppoint + 100;
      this.Param_blackcx = leftpoint + 302;
      this.Param_blackcy = toppoint + 37;
      this.Param_blackpx = leftpoint + 376;
      this.Param_blackpy = toppoint + 375;
      // $('#path_Red').attr('d', 'M' + this.Param_redx + ' ' + this.Param_redy + ' C' + this.Param_redx + ' ' + this.Param_redy + ' ' + this.Param_redcx + ' ' + this.Param_redcy + ' ' + this.Param_redpx + ' ' + this.Param_redpy);
      this.multimeter_black = 1;
      this.multimeterblackstartx = this.Param_blackx;
      this.multimeterblackstarty = this.Param_blacky;
      this.multimeterblackradianx = this.Param_blackcx;
      this.multimeterblackradiany = this.Param_blackcy;
      this.multimeterblackstopx = this.Param_blackpx;
      this.multimeterblackstopy = this.Param_blackpy;
      this.Param_blackstas = 0;
      this.Param_stasds = 0;
      this.hlq_multimeterBlackLine = true;
      this.Mint.In1NER_Multi_Black_x_x = "0";

      // 车上位置和车上模型编码都要置为0
      this.multimeterblackPosition = 0;
      this.Blackrepetition = 0;
      this.blackposition = 0;

      this.Param_blackx = this.Param_blackx - 64;
      this.Param_blacky = this.Param_blacky - 65;
      this.Param_blackpx = this.Param_blackpx - 60;
      this.Param_blackpy = this.Param_blackpy - 270;
      $("#path_black").attr(
        "d",
        "M" +
        this.Param_blackx +
        " " +
        this.Param_blacky +
        // ' C' +
        // this.Param_blackx +
        // ' ' +
        // this.Param_blacky +
        // ' ' +
        // this.Param_blackcx +
        // ' ' +
        // this.Param_blackcy +
        " " +
        this.Param_blackpx +
        " " +
        this.Param_blackpy
      );
    }, // 黑表笔的恢复初位置
    multimeterredRecover() {
      if (this.multimeterScreenUnit === "Ω") {
        this.wybShow = 'OL';
      } else if (this.multimeterScreenUnit === "V") {
        this.wybShow = '0';
      }
      this.redposition = 0;
      this.w_multimeter_redHtml = null;

      var topInt = parseInt($("#mask-multimeter").css("top")),
        leftInt = parseInt($("#mask-multimeter").css("left")),
        toppoint = topInt - 80,
        leftpoint = leftInt - 290;

      $("#hhjmultimeterRed").css("top", "" + (toppoint + 97) + "px");
      $("#hhjmultimeterRed").css("left", "" + (leftpoint + 497) + "px");
      $("#hhjmultimeterRed-hotspot").css("top", "" + (toppoint + 412) + "px");
      $("#hhjmultimeterRed-hotspot").css("left", "" + (leftpoint + 501) + "px");
      // $('#hhjmultimeterBlack').css('top', '' + (toppoint + 97) + 'px');
      // $('#hhjmultimeterBlack').css('left', '' + (leftpoint + 245) + 'px');
      // $('#hhjmultimeterBlack-hotspot').css('top', '' + (toppoint + 646) + 'px');
      // $('#hhjmultimeterBlack-hotspot').css('left', '' + (leftpoint + 245) + 'px');

      if (this.Mint.In1NER_Multi_Pass2Ohm_x_x === "1") {
        this.multimeterScreenNum = "OL";
      } else if (this.Mint.In1NER_Multi_Insulate_Ohm_x === "1") {
        this.multimeterScreenNum = "----";
      }

      this.Param_redx = leftpoint + 440;
      this.Param_redy = toppoint + 100;
      this.Param_redcx = leftpoint + 420;
      this.Param_redcy = toppoint + 37;
      this.Param_redpx = leftpoint + 403;
      this.Param_redpy = toppoint + 375;

      this.multimeter_red = 1;
      $("#path_Red").css("stroke", "#db3040");
      this.Mint.In1NER_Multi_Red_x_x = "0";

      // 车上位置和车上模型编码都要置为0
      this.multimeterredPosition = 0;
      this.Radrepetition = 0;
      this.redposition = 0;
      this.multimeterredstartx = this.Param_redx;
      this.multimeterredstarty = this.Param_redy;
      this.multimeterredradianx = this.Param_redcx;
      this.multimeterredradiany = this.Param_redcy;
      this.multimeterredstopx = this.Param_redpx;
      this.multimeterredstopy = this.Param_redpy;
      this.hlq_multimeterBlackLine = true;
      this.Param_redstas = 0;
      this.Param_stasds = 0;

      this.Param_redx = this.Param_redx + 8;
      this.Param_redy = this.Param_redy - 65;
      this.Param_redpx = this.Param_redpx - 70;
      this.Param_redpy = this.Param_redpy - 250;
      $("#path_Red").attr(
        "d",
        "M" +
        this.Param_redx +
        " " +
        this.Param_redy +
        // ' C' +
        // this.Param_redx +
        // ' ' +
        // this.Param_redy +
        // ' ' +
        // this.Param_redcx +
        // ' ' +
        // this.Param_redcy +
        " " +
        this.Param_redpx +
        " " +
        this.Param_redpy
      );
    }, // 红表笔的恢复初位置
    rtnMultimeterPosition: function (num) {
      if (this.multimeterredPosition == num) {
        this.multimeterredRecover();
      }
      if (this.multimeterblackPosition == num) {
        this.multimeterblackRecover();
      }
    }, // 判断红黑表笔是否在控件上，是否要回到热区上
    multimeterRecover: function (redProbe, blackProbe, gear) {
      if (redProbe === "redProbe" && this.multimeterredPosition !== null) {
        this.multimeterredRecover();
      }
      if (
        blackProbe === "blackProbe" &&
        this.multimeterblackPosition !== null
      ) {
        this.multimeterblackRecover();
      }
      if (gear === "gear" && this.Mint.In1NER_Multi_Off_x_x !== "1") {
        this.multimeteroff();
      }
    },
    // 判断红黑表笔是否在控件上，是否要回到热区上
    multimeterOpen() {
      this.multimeter();
    },

    circleareaAnimate(doOrfalse: boolean) {
      if (doOrfalse) {
        let hotarea = function () {
          $(".circleinfobox")
            .show()
            .stop()
            .animate(
              {
                display: "block"
              },
              300,
              function () {
                $(this)
                  .hide()
                  .stop()
                  .animate(
                    {
                      display: "block"
                    },
                    300,
                    function () {
                      $(this).hide();
                      hotarea();
                    }
                  );
              }
            );
        };
        hotarea();
      } else {
        $(".circleinfobox")
          .hide()
          .stop();
      }
    },

    /**
     * 万用表箭头波动
     * @param doOrfalse
     */
    arrowAnimate1(doOrfalse: boolean) {
      if (doOrfalse) {
        let arrow = function () {
          $(".multimeter-arrow1")
            .show()
            .stop()
            .animate(
              {
                top: "130px"
              },
              300,
              "linear",
              function () {
                $(this).animate(
                  {
                    top: "126px"
                  },
                  300,
                  "linear",
                  function () {
                    arrow();
                  }
                );
              }
            );
        };
        arrow();
        $(".multimeter-arrow2")
          .stop()
          .hide();
      } else {
        $(".multimeter-arrow1")
          .stop()
          .hide();
      }
    },

    /**
     * 万用表箭头波动
     * @param doOrfalse
     */
    arrowAnimate(doOrfalse: boolean) {
      if (doOrfalse) {
        let arrow = function () {
          $(".multimeter-arrow2")
            .show()
            .stop()
            .animate(
              {
                top: "170px"
              },
              300,
              "linear",
              function () {
                $(this).animate(
                  {
                    top: "167px"
                  },
                  300,
                  "linear",
                  function () {
                    arrow();
                  }
                );
              }
            );
        };
        $(".multimeter-arrow1")
          .stop()
          .hide();
        arrow();
      } else {
        $(".multimeter-arrow2")
          .stop()
          .hide();
      }
    },
    // 万用表中向仿真模型传输的参数
    Mint: {
      In1NER_Multi_Off_x_x: "1",
      In1NER_Multi_ACVlt_x_x: "0", // 电压交流
      In1NER_Multi_DCVlt_x_x: "0", // 电压直流
      In1NER_Multi_DCmVlt_x_x: "0", // 电压没用
      In1NER_Multi_Pass2Ohm_x_x: "0", // 电阻档时该值为1
      In1NER_Multi_hFE_x_x: "0", //
      In1NER_Multi_Amp_x_x: "0",
      In1NER_Multi_mAmp_x_x: "0",
      In1NER_Multi_mirAmp_x_x: "0",
      In1NER_Multi_Hold_x_x: "0",
      In1NER_Multi_VltRP_x_x: "1",
      In1NER_Multi_AmpMea_x_x: "0",
      In1NER_Multi_mirAmA_x_x: "0",
      In1NER_Multi_COM_x_x: "1",
      In1NER_Multi_Power_x_x: "1",
      In1NER_Multi_Red_x_x: "0", // 红表笔输入
      In1NER_Multi_Black_x_x: "0", // 黑表笔输入
      In1NER_Multi_Insulate_Ohm_x: "0", // 万用表绝缘电阻档位
      In1NER_Multi_Insulate_Switch_x: "0", // 万用表绝缘电阻开关
      In1MultiLogic_x_Black_x_x: "",
      In1MultiLogic_x_Red_x_x: "",
      In1MultiLogic_x_DCmVlt_x_x: ""
    },
    // 万用表中从仿真模型获取的参数
    Mout: {
      Out1NER_Multi_ToScreen_x_x: "----", // 万用表读数显示参数
      Out1MultiLogic_x_ToScreen_x_x: ""
    },

    // 处理范围内的随机数
    isRandom(parmA, parmB): number {
      const num1 = Number(Math.random().toFixed(2));
      const num2 = Number((Math.random() + parmA).toFixed(2));
      const num = Number(
        num2 >= parmA && num2 <= parmB ? num2 : this.isRandom(parmA, parmB)
      );
      return num;
    },

    iTrue: true, // 判断是递增还是递减 true=>递增 false=>递减
    arrIndex: 0, // 获取当前数组的索引；

    // 处理范围内的下标递增，数据实现递增或递减
    isArr(arr) {
      let isEntry = true;
      let newarr3 = [];
      let newarr2 = [arr[1]];
      if (arr[0] < arr[1]) {
        newarr3 = [];
        for (let i = 0; i <= arr[1] * 10; i++) {
          let newarr = i * 0.2;
          if (newarr < arr[1]) {
            newarr3.push(newarr);
          } else if (newarr3[newarr3.length - 1] < arr[1]) {
            newarr3.push(arr[1]);
          }
        }
        isEntry = false;
      } else {
        newarr3 = [arr[0]];
        for (
          let i = Math.floor((arr[0] * 10) / 2);
          i >= Math.floor((arr[1] * 10) / 2);
          i--
        ) {
          let newarr = i * 0.2;
          if (newarr > arr[1]) {
            newarr3.push(newarr);
          } else if (newarr3[newarr3.length - 1] > arr[1]) {
            newarr3.push(arr[1]);
          }
        }
        isEntry = false;
      }
      if (!isEntry) {
        if (this.arrIndex <= 0) {
          this.iTrue = true;
        }

        if (this.arrIndex === newarr3.length - 1) {
          this.iTrue = false;
        }

        if (!this.iTrue) {
          if (
            this.gearPanelService.isBrake !== 1 &&
            this.gearPanelService.controlStalls !== 2
          ) {
            this.arrIndex--;
          }
        } else {
          if (
            this.gearPanelService.isBrake !== 1 &&
            this.gearPanelService.controlStalls !== 2
          ) {
            this.arrIndex++;
          }
        }
      }

      return newarr3[this.arrIndex];
    },

    redPen: 0, // 保存当前红表笔的数值
    blackPen: 0, // 保存当前黑表笔的数值
    wybShow: 0, // 计算当前万用表要显示的数值

    dropRedType: null, // 记录当前红表笔的类型是random还是add还是on
    dropBlackType: null, // 记录当前黑表笔的类型是random还是add还是on

    dropRedID: null, // 记录当前黑表笔的类型是random还是add还是on
    dropBlackID: null, // 记录当前黑表笔的类型是random还是add还是on

    timer: null,

    dropID: null,
    penID: null,

    // 万用表表笔触发drop时触发定时器，移开时关闭定时器

    /**
     * @type eventID   获取当前drop热区的ID
     * @type uiDraggableID   获取当前拖动元素的ID---是红表笔还是黑表笔
     * @type isGears  当前是出发的drop事件还是点击档位事件，如果是点击切换档位则不能给dropRedID、dropRedType赋值----false为drop，true为却换万用表档位
     */
    isDrop(eventID, uiDraggableID, isGears) {
      let setInte: any;
      let id = Number(eventID);
      let arrRed: any;
      let arrBlack: any;
      if (!isGears) {
        if (uiDraggableID === "hhjmultimeterRed-hotspot") {
          this.dropRedID = id; // 拿的是热区元素的ID;
        } else if (uiDraggableID === "hhjmultimeterBlack-hotspot") {
          this.dropBlackID = id;
        }
      } else {
        if (uiDraggableID === "hhjmultimeterRed-hotspot") {
          this.dropRedID = null; // 拿的是热区元素的ID;
          arrRed = null;
          this.multimeterScreenNum = 0;
          if (this.multimeterScreenUnit === "Ω") {
            this.wybShow = 'OL';
          } else if (this.multimeterScreenUnit === "V") {
            this.wybShow = '0';
          }
          return;
        } else if (uiDraggableID === "hhjmultimeterBlack-hotspot") {
          this.dropBlackID = null;
          arrBlack = null;
          if (this.multimeterScreenUnit === "Ω") {
            this.wybShow = 'OL';
          } else if (this.multimeterScreenUnit === "V") {
            this.wybShow = '0';
          }
          this.multimeterScreenNum = 0;
          return;
        }
      }
      /**
       * @type pinType 当前拔下的是哪一个插头
       * @type id  当前的表笔drop事件触发的ID
       * @type isGears  当前是出发的drop事件还是点击档位事件，如果是点击切换档位则不能给dropRedID、dropRedType赋值----false为drop，true为却换万用表档位
       */
      // 测电压方法
      this.DCElectric = (pinType, id, isGears) => {
        // [this.appService.currentFault]---当前是哪一个故障的数据
        // [pinType]---当前是哪一个插头拔下的数据
        // id---当前是测量电压的测量点的下标ID
        // if (!isGears) {
        // 判断拖动的是哪一个表笔，把相应的ID和类型进行保存
        if (
          (pinType === "offV" || pinType === "allOut") &&
          (this.multimeterScreenUnit == "V" ||
            this.multimeterScreenUnit == "V~")
        ) {
          let currentOsciMeasureOhm = [
            this.multimeterblackPosition,
            this.multimeterredPosition
          ];

          if (
            this.Adata[this.appService.currentFault].dvNum[pinType] &&
            this.Adata[this.appService.currentFault].dvNum[pinType][0][
            currentOsciMeasureOhm.join("_")
            ] &&
            !this.dashboardService.stalls &&
            !this.gearPanelService.isBrake
          ) {
            this.wybShow = this.Adata[this.appService.currentFault].dvNum[
              pinType
            ][0][currentOsciMeasureOhm.join("_")][0];
          } else if (
            this.Adata[this.appService.currentFault].dvNum[pinType] &&
            this.Adata[this.appService.currentFault].dvNum[pinType][0][
            currentOsciMeasureOhm.join("_")
            ] &&
            this.dashboardService.stalls &&
            !this.gearPanelService.isBrake
          ) {
            this.wybShow = this.Adata[this.appService.currentFault].dvNum[
              pinType
            ][0][currentOsciMeasureOhm.join("_")][1];
          } else if (
            this.Adata[this.appService.currentFault].dvNum[pinType] &&
            this.Adata[this.appService.currentFault].dvNum[pinType][0][
            currentOsciMeasureOhm.join("_")
            ] &&
            !this.dashboardService.stalls &&
            this.gearPanelService.isBrake
          ) {
            this.wybShow = this.Adata[this.appService.currentFault].dvNum[
              pinType
            ][0][currentOsciMeasureOhm.join("_")][2];
          } else if (
            this.Adata[this.appService.currentFault].dvNum[pinType] &&
            this.Adata[this.appService.currentFault].dvNum[pinType][0][
            currentOsciMeasureOhm.join("_")
            ] &&
            this.dashboardService.stalls &&
            this.gearPanelService.isBrake
          ) {
            this.wybShow = this.Adata[this.appService.currentFault].dvNum[
              pinType
            ][0][currentOsciMeasureOhm.join("_")][3];
          } else {
            this.wybShow = '0';
          }
          return;
        }

        if (this.multimeterScreenUnit == "V") {
          arrRed = Array.from(
            this.Adata[this.appService.currentFault].dvNum[pinType][
            this.dropRedID
            ]
          );
          arrBlack = Array.from(
            this.Adata[this.appService.currentFault].dvNum[pinType][
            this.dropBlackID
            ]
          );
        } else if (this.multimeterScreenUnit == "V~") {
          arrRed = Array.from(
            this.Adata[this.appService.currentFault].dcNum[pinType][
            this.dropRedID
            ]
          );
          arrBlack = Array.from(
            this.Adata[this.appService.currentFault].dcNum[pinType][
            this.dropBlackID
            ]
          );
        }
        let that = this;

        // 判断表笔上的数值是否是随机值;
        let isRandomNum = num => {
          if (
            typeof arrRed[num] !== "number" &&
            typeof arrBlack[num] !== "number"
          ) {
            this.wybShow = Math.abs(
              arrRed[num].call(that) - arrBlack[num].call(that)
            ).toFixed(1);
            return true;
          }
          if (
            typeof arrRed[num] !== "number" &&
            typeof arrBlack[num] === "number"
          ) {
            this.wybShow = Math.abs(
              arrRed[num].call(that) - arrBlack[num]
            ).toFixed(1);
            return true;
          }
          if (
            typeof arrRed[num] === "number" &&
            typeof arrBlack[num] !== "number"
          ) {
            this.wybShow = Math.abs(
              arrRed[num] - arrBlack[num].call(that)
            ).toFixed(1);
            return true;
          }
        };

        // 新增判断当前油门是踩下还是松开，并且在什么档位上
        if (!this.dashboardService.stalls && !this.gearPanelService.isBrake) {
          if (Math.abs(arrRed[0] - arrBlack[0]).toFixed(1) == "0.0") {
            this.wybShow = '0';
            return;
          }
          isRandomNum(0)
            ? ""
            : (this.wybShow = Math.abs(arrRed[0] - arrBlack[0]).toFixed(2));
        } else if (
          this.dashboardService.stalls &&
          !this.gearPanelService.isBrake
        ) {
          if (Math.abs(arrRed[1] - arrBlack[1]).toFixed(1) == "0.0") {
            this.wybShow = '0';
            return;
          }
          isRandomNum(1)
            ? ""
            : (this.wybShow = Math.abs(arrRed[1] - arrBlack[1]).toFixed(2));
        } else if (
          !this.dashboardService.stalls &&
          this.gearPanelService.isBrake
        ) {
          if (Math.abs(arrRed[2] - arrBlack[2]).toFixed(1) == "0.0") {
            this.wybShow = '0';
            return;
          }
          isRandomNum(2)
            ? ""
            : (this.wybShow = Math.abs(arrRed[2] - arrBlack[2]).toFixed(2));
        } else if (
          this.dashboardService.stalls &&
          this.gearPanelService.isBrake
        ) {
          if (Math.abs(arrRed[3] - arrBlack[3]).toFixed(1) == "0.0") {
            this.wybShow = '0';
            return;
          }
          isRandomNum(3)
            ? ""
            : (this.wybShow = Math.abs(arrRed[3] - arrBlack[3]).toFixed(2));
        }

        this.multimeterScreenNum = this.wybShow;
        if (
          !this.multimeterblackPosition ||
          !this.multimeterredPosition ||
          this.Mint.In1NER_Multi_ACVlt_x_x !== "1" // 等于1是电压;
        ) {
          return;
        }
      };
      // 电阻值
      this.resistance = () => {
        if (this.timer) {
          clearInterval(this.timer);
        }
        // [this.appService.currentFault]---当前是哪一个故障的数据
        // [this.currentPinOut]---当前是哪一个插头拔下的数据  同测量交流电压时的[pinType]
        // currentOsciMeasureOhm.join()   获取电阻值数据中对象的值

        if (
          !this.multimeterblackPosition ||
          !this.multimeterredPosition ||
          this.Mint.In1NER_Multi_Pass2Ohm_x_x !== "1"
        ) {
          return;
        }

        // 测量电阻时两个表笔放置的位置
        let currentOsciMeasureOhm = [
          this.multimeterblackPosition,
          this.multimeterredPosition
        ];
        if (
          this.Adata[this.appService.currentFault].resistance[
          this.currentPinOut
          ] &&
          this.Adata[this.appService.currentFault].resistance[
          this.currentPinOut
          ][currentOsciMeasureOhm.join("_")]
        ) {
          this.wybShow = this.Adata[this.appService.currentFault].resistance[
            this.currentPinOut
          ][currentOsciMeasureOhm.join("_")][0];
        } else if (
          this.Adata[this.appService.currentFault].resistance[
          this.currentPinOut
          ] &&
          this.Adata[this.appService.currentFault].resistance[
          this.currentPinOut
          ][currentOsciMeasureOhm.reverse().join("_")]
        ) {
          this.wybShow = this.Adata[this.appService.currentFault].resistance[
            this.currentPinOut
          ][currentOsciMeasureOhm.join("_")][0];
        } else {
          this.wybShow = "OL";
        }

        this.multimeterScreenNum = this.wybShow;
      };
      // 绝缘电阻值
      this.insulationRes = () => {
        if (this.timer) {
          clearInterval(this.timer);
        }
        if (
          !this.multimeterblackPosition ||
          !this.multimeterredPosition ||
          this.Mint.In1NER_Multi_Insulate_Ohm_x !== "1"
        ) {
          return;
        }
        // 测量电阻时两个表笔放置的位置
        let currentOsciMeasureOhm = [
          this.multimeterblackPosition,
          this.multimeterredPosition
        ];
        if (
          this.Adata[this.appService.currentFault].insulationRes[
          this.currentPinOut
          ] &&
          this.Adata[this.appService.currentFault].insulationRes[
          this.currentPinOut
          ][currentOsciMeasureOhm.join("_")]
        ) {
          this.resShow = this.Adata[this.appService.currentFault].insulationRes[
            this.currentPinOut
          ][currentOsciMeasureOhm.join("_")][0];
        } else if (
          this.Adata[this.appService.currentFault].insulationRes[
          this.currentPinOut
          ] &&
          this.Adata[this.appService.currentFault].insulationRes[
          this.currentPinOut
          ][currentOsciMeasureOhm.reverse().join("_")]
        ) {
          this.resShow = this.Adata[this.appService.currentFault].insulationRes[
            this.currentPinOut
          ][currentOsciMeasureOhm.join("_")][0];
        }
      };
      console.log(
        this.Mint.In1NER_Multi_Pass2Ohm_x_x,
        this.currentPinOut,
        "klklklk"
      );
      // 交流电压或直流电压档位档位
      if (
        (this.Mint.In1NER_Multi_ACVlt_x_x === "1" ||
          this.Mint.In1NER_Multi_DCVlt_x_x == "1") &&
        this.dropRedID &&
        this.dropBlackID
      ) {
        // 交流电压
        this.DCElectric(this.currentPinOut, id, false);
      } else if (this.Mint.In1NER_Multi_Pass2Ohm_x_x === "1") {
        // 测量电阻
        if (this.currentPinOut !== "allOut") {
          // 判断放置表笔时是否拔下插头
          if (uiDraggableID === "hhjmultimeterRed-hotspot") {
            this.handleErrorService.handleError({
              message: "测量电阻前，请断开插头"
            });
            this.multimeterredRecover(null, null);
            return;
          } else if (uiDraggableID === "hhjmultimeterBlack-hotspot") {
            this.handleErrorService.handleError({
              message: "测量电阻前，请断开插头"
            });
            this.multimeterblackRecover(null, null);
            return;
          }
        }
        this.resistance();
      } else if (this.Mint.In1NER_Multi_Insulate_Ohm_x === "1") {
        if (
          this.multimeterblackPosition &&
          this.multimeterredPosition &&
          (this.multimeterredPosition == "GND" ||
            this.multimeterblackPosition == "GND" ||
            this.multimeterredPosition == "N95" ||
            this.multimeterblackPosition == "N95")
        ) {
          this.isInsulationRes = true;
        } else if (
          this.multimeterblackPosition &&
          this.multimeterredPosition &&
          (this.multimeterredPosition !== "GND" ||
            this.multimeterblackPosition !== "GND" ||
            this.multimeterredPosition !== "N95" ||
            this.multimeterblackPosition == "N95")
        ) {
          if (uiDraggableID === "hhjmultimeterRed-hotspot") {
            this.handleErrorService.handleError({
              message: "请将绝缘检测仪负极表夹连接到车身负极搭铁"
            });
            this.multimeterredRecover(null, null);
            return;
          } else if (uiDraggableID === "hhjmultimeterBlack-hotspot") {
            this.handleErrorService.handleError({
              message: "请将绝缘检测仪负极表夹连接到车身负极搭铁"
            });
            this.multimeterblackRecover(null, null);
            return;
          }
        }
      }
    },

    // 示波器测量
    isOscilloscopeDrop() {
      if (this.oscilloscopeService.Mdata.oscilloscopeRedPosition=='0' || this.oscilloscopeService.Mdata.oscilloscopeBlackPosition=='0') {
        return;
      }
      this.currentOsciMeasureHotSpot = [
        this.oscilloscopeService.Mdata.oscilloscopeRedPosition,
        this.oscilloscopeService.Mdata.oscilloscopeBlackPosition
      ];
      if((this.oscilloscopeService.Mdata.oscilloscopeRedPosition==='N90'&&(this.oscilloscopeService.Mdata.oscilloscopeBlackPosition==='N95'||this.oscilloscopeService.Mdata.oscilloscopeBlackPosition=='GND'))||(this.oscilloscopeService.Mdata.oscilloscopeBlackPosition==='N90'&&(this.oscilloscopeService.Mdata.oscilloscopeRedPosition==='N95'||this.oscilloscopeService.Mdata.oscilloscopeRedPosition=='GND'))){
        this.oscilloscopeService.Mdata.noZeroLine=true;
        this.oscilloscopeService.Mdata.zeroLine=false;
      }else{
        this.oscilloscopeService.Mdata.noZeroLine=false;
        this.oscilloscopeService.Mdata.zeroLine=true;
      }
      // if (
      //   this.oscilloscopeService.Mdata.oscilloscopeRedPosition !== 0 &&
      //   this.oscilloscopeService.Mdata.oscilloscopeBlackPosition !== 0 &&
      //   this.oscilloscopeService.oscilloscopeWaveValue01[
      //   this.appService.currentFault
      //   ][this.currentPinOut][this.currentOsciMeasureHotSpot.join(",")] && this.dashboardService.stalls
      // ) {
      //   this.oscilloscopeService.Mdata.currentOscilloscopeArr = this.oscilloscopeService.oscilloscopeWaveValue01[
      //     this.appService.currentFault
      //   ][this.currentPinOut][this.currentOsciMeasureHotSpot.join(",")];
      //   if (
      //     this.oscilloscopeService.Mdata.currentOscilloscopeArr[0] <
      //     this.oscilloscopeService.Mdata.currentOscilloscopeArr[1]
      //   ) {
      //     this.oscilloscopeService.Mdata.yReduce = 0;
      //   } else {
      //     this.oscilloscopeService.Mdata.yReduce =
      //       this.oscilloscopeService.Mdata.currentOscilloscopeArr[0] * 2;
      //   }
      // } else if (
      //   this.oscilloscopeService.Mdata.oscilloscopeRedPosition !== 0 &&
      //   this.oscilloscopeService.Mdata.oscilloscopeBlackPosition !== 0 &&
      //   this.oscilloscopeService.oscilloscopeWaveValue01[
      //   this.appService.currentFault
      //   ][this.currentPinOut][
      //   this.currentOsciMeasureHotSpot.reverse().join(",")
      //   ] && this.dashboardService.stalls
      // ) {
      //   this.oscilloscopeService.Mdata.currentOscilloscopeArr = this.oscilloscopeService.oscilloscopeWaveValue01[
      //     this.appService.currentFault
      //   ][this.currentPinOut][this.currentOsciMeasureHotSpot];
      //   if (
      //     this.oscilloscopeService.Mdata.currentOscilloscopeArr[0] <
      //     this.oscilloscopeService.Mdata.currentOscilloscopeArr[1]
      //   ) {
      //     this.oscilloscopeService.Mdata.yReduce = 0;
      //   } else {
      //     this.oscilloscopeService.Mdata.yReduce =
      //       this.oscilloscopeService.Mdata.currentOscilloscopeArr[0] * 2;
      //   }
      // } else {
      //   this.oscilloscopeService.Mdata.currentOscilloscopeArr = [0, 0];
      // }
    }
  };

  constructor(
    public communicationService: CommunicationService,
    public appService: AppService,
    public skillService: SkillService,
    public dashboardService: DashboardService,
    public gearPanelService: GearPanelService,
    public handleErrorService: HandleErrorService,
    public oscilloscopeService: OscilloscopeService,
  ) { }
}